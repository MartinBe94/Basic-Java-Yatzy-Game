/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package yatz;
import java.util.*;
import java.awt.*;
import java.net.MalformedURLException;
import java.net.URL;
import javax.swing.*;

/**
 *
 * @author Marti
 */
public class yatz extends javax.swing.JFrame {

    
    private int diceone=0;
    private int dicetwo=0;
    private int dicethree=0;
    private int dicefour=0;
    private int dicefive=0;
    private int startdice,dice1,dice2,dice3,dice4,dice5=0;
    private int d1,d2,d3,d4,d5=0;
    private String on,tw,thre,fou,fiv,sixe,dice,p1,p2;
    private String one,two,three,four,five,sixes,onepair,twopair,chance,bon;
    private String rounds,totalt,fullhouse,big,little,threeofkind,fourofkind,dices,yacht;
    private int pone,ptwo,bonu2,top2,bot2,fin2,lock,total,roll,rolls,bonu,top,bot,fin=0;
    /**
     * Creates new form yatz
     */
    public yatz() {
          initComponents();
    lblroll.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnroll = new javax.swing.JButton();
        lblrounds = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        btnroll1or2 = new javax.swing.JButton();
        lbl1pdice = new javax.swing.JLabel();
        btnfirst = new javax.swing.JButton();
        btnsecond = new javax.swing.JButton();
        lblplayer = new javax.swing.JLabel();
        lblhighest = new javax.swing.JLabel();
        lblchoose = new javax.swing.JLabel();
        lblor = new javax.swing.JLabel();
        lbl2pdice = new javax.swing.JLabel();
        lblrdy = new javax.swing.JLabel();
        lblroll = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        btn1s = new javax.swing.JButton();
        btn2s = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btn3s = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btn4s = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        btn5s = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btn6s = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnpair = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        btntwopair = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        btn3of = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        btn4of = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        btnlittle = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        btnbig = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        btnfull = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        btnyacht = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        btnchance = new javax.swing.JButton();
        btn1s2 = new javax.swing.JButton();
        btn2s2 = new javax.swing.JButton();
        btn3s2 = new javax.swing.JButton();
        btn4s2 = new javax.swing.JButton();
        btn5s2 = new javax.swing.JButton();
        btn6s2 = new javax.swing.JButton();
        btnpair2 = new javax.swing.JButton();
        btntwopair2 = new javax.swing.JButton();
        btn3of2 = new javax.swing.JButton();
        btn4of2 = new javax.swing.JButton();
        btnlittle2 = new javax.swing.JButton();
        btnbig2 = new javax.swing.JButton();
        btnfull2 = new javax.swing.JButton();
        btnyacht2 = new javax.swing.JButton();
        btnchance2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        lblfin = new javax.swing.JLabel();
        lblbot = new javax.swing.JLabel();
        lbltop = new javax.swing.JLabel();
        lblbon = new javax.swing.JLabel();
        lbl1pl = new javax.swing.JLabel();
        lblbonu = new javax.swing.JLabel();
        lbltopt = new javax.swing.JLabel();
        lblbott = new javax.swing.JLabel();
        lblfina = new javax.swing.JLabel();
        lbl2fin = new javax.swing.JLabel();
        lbl2bot = new javax.swing.JLabel();
        lbl2top = new javax.swing.JLabel();
        lbl2bon = new javax.swing.JLabel();
        lbl2pl = new javax.swing.JLabel();
        lbl2bonu = new javax.swing.JLabel();
        lbl2topt = new javax.swing.JLabel();
        lbl2bott = new javax.swing.JLabel();
        lbl2fina = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblDice1 = new javax.swing.JLabel();
        lblDice2 = new javax.swing.JLabel();
        lblDice3 = new javax.swing.JLabel();
        lblDice4 = new javax.swing.JLabel();
        lblDice5 = new javax.swing.JLabel();
        btnlock1 = new javax.swing.JButton();
        btnlock2 = new javax.swing.JButton();
        btnlock3 = new javax.swing.JButton();
        btnlock4 = new javax.swing.JButton();
        btnlock5 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        btn1pl2 = new javax.swing.JButton();
        btn2pl2 = new javax.swing.JButton();
        btnstart2 = new javax.swing.JButton();
        btnagain2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Yatzy");

        jLabel1.setFont(new java.awt.Font("Snap ITC", 0, 24)); // NOI18N
        jLabel1.setText("Yatzy");

        btnroll.setFont(new java.awt.Font("Snap ITC", 0, 16)); // NOI18N
        btnroll.setText("Dice Roll");
        btnroll.setEnabled(false);
        btnroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrollActionPerformed(evt);
            }
        });

        lblrounds.setFont(new java.awt.Font("Snap ITC", 2, 18)); // NOI18N
        lblrounds.setForeground(new java.awt.Color(51, 204, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(btnroll))
                .addGap(18, 18, 18)
                .addComponent(lblrounds, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                .addGap(42, 42, 42))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnroll)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblrounds, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        btnroll1or2.setFont(new java.awt.Font("Snap ITC", 0, 16)); // NOI18N
        btnroll1or2.setText("Roll");
        btnroll1or2.setEnabled(false);
        btnroll1or2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnroll1or2ActionPerformed(evt);
            }
        });

        lbl1pdice.setFont(new java.awt.Font("Snap ITC", 0, 16)); // NOI18N
        lbl1pdice.setForeground(new java.awt.Color(255, 0, 51));
        lbl1pdice.setText("1P");

        btnfirst.setFont(new java.awt.Font("Snap ITC", 0, 16)); // NOI18N
        btnfirst.setText("First");
        btnfirst.setEnabled(false);
        btnfirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfirstActionPerformed(evt);
            }
        });

        btnsecond.setFont(new java.awt.Font("Snap ITC", 0, 16)); // NOI18N
        btnsecond.setText("Second");
        btnsecond.setEnabled(false);
        btnsecond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsecondActionPerformed(evt);
            }
        });

        lblplayer.setFont(new java.awt.Font("Snap ITC", 1, 16)); // NOI18N
        lblplayer.setText("1P");

        lblhighest.setFont(new java.awt.Font("Snap ITC", 3, 12)); // NOI18N
        lblhighest.setText("Highest Roll");

        lblchoose.setFont(new java.awt.Font("Snap ITC", 3, 12)); // NOI18N
        lblchoose.setText("Choose to go");

        lblor.setFont(new java.awt.Font("Snap ITC", 3, 14)); // NOI18N
        lblor.setText("OR");

        lbl2pdice.setFont(new java.awt.Font("Snap ITC", 0, 16)); // NOI18N
        lbl2pdice.setForeground(new java.awt.Color(0, 51, 255));
        lbl2pdice.setText("2P");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblhighest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(btnroll1or2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblplayer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(lbl1pdice)
                                .addGap(18, 18, 18)
                                .addComponent(lbl2pdice))
                            .addComponent(lblchoose, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnsecond)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblor, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnfirst))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnroll1or2)
                    .addComponent(lblplayer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl1pdice)
                    .addComponent(lbl2pdice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblhighest)
                .addGap(7, 7, 7)
                .addComponent(lblchoose)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnfirst)
                .addGap(3, 3, 3)
                .addComponent(lblor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsecond)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 225, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblrdy.setIcon(new javax.swing.ImageIcon("C:\\Users\\Marti\\Desktop\\roll-the.gif")); // NOI18N

        lblroll.setIcon(new javax.swing.ImageIcon("C:\\Users\\Marti\\Desktop\\throwing-dice-quavo.gif")); // NOI18N

        jLabel7.setText("Ones");

        btn1s.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn1s.setEnabled(false);
        btn1s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1sActionPerformed(evt);
            }
        });

        btn2s.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn2s.setEnabled(false);
        btn2s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2sActionPerformed(evt);
            }
        });

        jLabel8.setText("Twos");

        btn3s.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn3s.setEnabled(false);
        btn3s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3sActionPerformed(evt);
            }
        });

        jLabel9.setText("Threes");

        btn4s.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn4s.setEnabled(false);
        btn4s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4sActionPerformed(evt);
            }
        });

        jLabel10.setText("Fours");

        btn5s.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn5s.setEnabled(false);
        btn5s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5sActionPerformed(evt);
            }
        });

        jLabel11.setText("Fives");

        btn6s.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn6s.setEnabled(false);
        btn6s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6sActionPerformed(evt);
            }
        });

        jLabel12.setText("Sixes");

        jLabel13.setText("One Pair");

        btnpair.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnpair.setEnabled(false);
        btnpair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpairActionPerformed(evt);
            }
        });

        jLabel14.setText("Two Pair");

        btntwopair.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btntwopair.setEnabled(false);
        btntwopair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntwopairActionPerformed(evt);
            }
        });

        jLabel15.setText("3 Of Kind");

        btn3of.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn3of.setEnabled(false);
        btn3of.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ofActionPerformed(evt);
            }
        });

        jLabel16.setText("4 Of Kind");

        btn4of.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn4of.setEnabled(false);
        btn4of.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ofActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Little Straight");

        btnlittle.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnlittle.setEnabled(false);
        btnlittle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlittleActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("Big Straight");

        btnbig.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnbig.setEnabled(false);
        btnbig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbigActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setText("Full House");

        btnfull.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnfull.setEnabled(false);
        btnfull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfullActionPerformed(evt);
            }
        });

        jLabel20.setText("Yatzy");

        btnyacht.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnyacht.setEnabled(false);
        btnyacht.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnyachtActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Chance");

        btnchance.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnchance.setEnabled(false);
        btnchance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchanceActionPerformed(evt);
            }
        });

        btn1s2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn1s2.setEnabled(false);
        btn1s2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1s2ActionPerformed(evt);
            }
        });

        btn2s2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn2s2.setEnabled(false);
        btn2s2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2s2ActionPerformed(evt);
            }
        });

        btn3s2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn3s2.setEnabled(false);
        btn3s2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3s2ActionPerformed(evt);
            }
        });

        btn4s2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn4s2.setEnabled(false);
        btn4s2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4s2ActionPerformed(evt);
            }
        });

        btn5s2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn5s2.setEnabled(false);
        btn5s2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5s2ActionPerformed(evt);
            }
        });

        btn6s2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn6s2.setEnabled(false);
        btn6s2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6s2ActionPerformed(evt);
            }
        });

        btnpair2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnpair2.setEnabled(false);
        btnpair2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpair2ActionPerformed(evt);
            }
        });

        btntwopair2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btntwopair2.setEnabled(false);
        btntwopair2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntwopair2ActionPerformed(evt);
            }
        });

        btn3of2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn3of2.setEnabled(false);
        btn3of2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3of2ActionPerformed(evt);
            }
        });

        btn4of2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btn4of2.setEnabled(false);
        btn4of2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4of2ActionPerformed(evt);
            }
        });

        btnlittle2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnlittle2.setEnabled(false);
        btnlittle2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlittle2ActionPerformed(evt);
            }
        });

        btnbig2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnbig2.setEnabled(false);
        btnbig2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbig2ActionPerformed(evt);
            }
        });

        btnfull2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnfull2.setEnabled(false);
        btnfull2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfull2ActionPerformed(evt);
            }
        });

        btnyacht2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnyacht2.setEnabled(false);
        btnyacht2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnyacht2ActionPerformed(evt);
            }
        });

        btnchance2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnchance2.setEnabled(false);
        btnchance2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchance2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn6s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn5s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn2s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn1s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn4s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(btn3s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn1s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn2s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn3s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn4s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn5s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn6s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnbig, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(btn3of, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(btntwopair, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(btnpair, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnlittle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(btn4of, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnpair2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btntwopair2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn3of2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnchance, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnyacht, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(18, 18, 18)
                                .addComponent(btnfull, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnfull2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnyacht2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnchance2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn4of2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnlittle2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnbig2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(btn1s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn1s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(btn2s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn2s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(btn3s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn3s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(btn4s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(btn5s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(btn6s, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(btn4s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn5s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn6s2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(btnpair, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(btntwopair, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(btn3of, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(btnfull, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(btnyacht, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(btnchance, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(btnpair2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btntwopair2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn3of2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(btnfull2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnyacht2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnchance2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(btn4of, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(btnlittle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(btnbig, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(btn4of2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnlittle2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnbig2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel27.setText("_______________");

        lblfin.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblfin.setText("0");

        lblbot.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblbot.setText("0");

        lbltop.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbltop.setText("0");

        lblbon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblbon.setText("0");

        lbl1pl.setText("Player 1");

        lblbonu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblbonu.setText("Top Bonus:");

        lbltopt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbltopt.setText("Top Total:");

        lblbott.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblbott.setText("Bottom Total:");

        lblfina.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblfina.setText("Final Total:");

        lbl2fin.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lbl2bot.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lbl2top.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lbl2bon.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lbl2bonu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lbl2topt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lbl2bott.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lbl2fina.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblbonu)
                    .addComponent(lbl1pl)
                    .addComponent(lbltopt)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblbott)
                            .addComponent(lblfina))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblfin)
                            .addComponent(lblbot, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbltop, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblbon, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addComponent(lbl2bonu)
                    .addComponent(lbl2pl)
                    .addComponent(lbl2topt)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl2bott)
                            .addComponent(lbl2fina))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbl2fin)
                            .addComponent(lbl2bot, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl2top, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl2bon, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel27)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(lbl1pl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblbonu)
                    .addComponent(lblbon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbltopt)
                    .addComponent(lbltop))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblbot)
                    .addComponent(lblbott))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblfin)
                            .addComponent(lblfina)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel27)))
                .addGap(18, 18, 18)
                .addComponent(lbl2pl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl2bonu)
                    .addComponent(lbl2bon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl2topt)
                    .addComponent(lbl2top))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl2bot)
                    .addComponent(lbl2bott))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl2fin)
                    .addComponent(lbl2fina))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        lblDice1.setText("Dice 1");

        lblDice2.setText("Dice 2");

        lblDice3.setText("Dice 3");

        lblDice4.setText("Dice 4");

        lblDice5.setText("Dice 5");

        btnlock1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnlock1.setText("Lock 1");
        btnlock1.setEnabled(false);
        btnlock1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlock1ActionPerformed(evt);
            }
        });

        btnlock2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnlock2.setText("Lock 2");
        btnlock2.setEnabled(false);
        btnlock2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlock2ActionPerformed(evt);
            }
        });

        btnlock3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnlock3.setText("Lock 3");
        btnlock3.setEnabled(false);
        btnlock3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlock3ActionPerformed(evt);
            }
        });

        btnlock4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnlock4.setText("Lock 4");
        btnlock4.setEnabled(false);
        btnlock4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlock4ActionPerformed(evt);
            }
        });

        btnlock5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnlock5.setText("Lock 5");
        btnlock5.setEnabled(false);
        btnlock5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlock5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnlock1)
                    .addComponent(lblDice1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnlock2)
                    .addComponent(lblDice2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnlock3)
                    .addComponent(lblDice3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnlock4)
                    .addComponent(lblDice4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnlock5)
                    .addComponent(lblDice5)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDice1)
                    .addComponent(lblDice2)
                    .addComponent(lblDice3)
                    .addComponent(lblDice4)
                    .addComponent(lblDice5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnlock1)
                    .addComponent(btnlock2)
                    .addComponent(btnlock3)
                    .addComponent(btnlock4)
                    .addComponent(btnlock5)))
        );

        jLabel43.setFont(new java.awt.Font("Snap ITC", 0, 16)); // NOI18N
        jLabel43.setText("Players:");

        btn1pl2.setFont(new java.awt.Font("Snap ITC", 0, 24)); // NOI18N
        btn1pl2.setText("1");
        btn1pl2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1pl2ActionPerformed(evt);
            }
        });

        btn2pl2.setFont(new java.awt.Font("Snap ITC", 0, 24)); // NOI18N
        btn2pl2.setText("2");
        btn2pl2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2pl2ActionPerformed(evt);
            }
        });

        btnstart2.setFont(new java.awt.Font("Snap ITC", 0, 16)); // NOI18N
        btnstart2.setText("Start Game");
        btnstart2.setEnabled(false);
        btnstart2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnstart2ActionPerformed(evt);
            }
        });

        btnagain2.setFont(new java.awt.Font("Snap ITC", 0, 16)); // NOI18N
        btnagain2.setText("Play Again");
        btnagain2.setEnabled(false);
        btnagain2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnagain2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(btn1pl2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn2pl2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel43)
                    .addComponent(btnagain2)
                    .addComponent(btnstart2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn1pl2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn2pl2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(btnstart2)
                .addGap(18, 18, 18)
                .addComponent(btnagain2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblrdy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblroll))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 88, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblrdy)
                                .addComponent(lblroll)))
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrollActionPerformed
        // TODO add your handling code here:
        roll++;
        rounds=lblrounds.getText();
        
        diceone=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        dicethree=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);

        if(roll>3){
            btnroll.setEnabled(false);
            roll=0;
            lock=0;
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            
        }else if(roll<3){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(true);
            btnlock2.setEnabled(true);
            btnlock3.setEnabled(true);
            btnlock4.setEnabled(true);
            btnlock5.setEnabled(true);
           d1=0;
           d2=0;
           d3=0;
           d4=0;
           d5=0;
        }
        
        if(d1==0&d2==0&d3==0&d4==0&d5==0){
        dice(dices);
        }
        
        else if(d1==1&d2==0&d3==0&d4==0&d5==0){
        dice1(dices);
        }
        
        else if(d1==0&d2==1&d3==0&d4==0&d5==0){
        dice2(dices);
        }
        
        else if(d1==0&d2==0&d3==1&d4==0&d5==0){
        dice3(dices);
        }
        
        else if(d1==0&d2==0&d3==0&d4==1&d5==0){
        dice4(dices);
        }
        
        else if(d1==0&d2==0&d3==0&d4==0&d5==1){
        dice5(dices);
        }
        
        else if(d1==1&d2==1&d3==0&d4==0&d5==0){
        dice1o2(dices);
        }else if(d1==1&d2==1&d3==1&d4==0&d5==0){
        dice1o2o3(dices);
        }else if(d1==1&d2==1&d3==0&d4==1&d5==0){
        dice1o2o4(dices);
        }else if(d1==1&d2==1&d3==0&d4==0&d5==1){
        dice1o2o5(dices);
        }else if(d1==1&d2==1&d3==1&d4==1&d5==0){
        dice1o2o3o4(dices);
        }else if(d1==1&d2==1&d3==1&d4==0&d5==1){
        dice1o2o3o5(dices);
        }
        else if(d1==1&d2==1&d3==0&d4==1&d5==1){
        dice1o2o4o5(dices);
        }
        
        else if(d1==1&d2==0&d3==1&d4==0&d5==0){
        dice1o3(dices);
        }else if(d1==1&d2==0&d3==1&d4==1&d5==0){
        dice1o3o4(dices);
        }else if(d1==1&d2==0&d3==1&d4==0&d5==1){
        dice1o3o5(dices);
        }else if(d1==1&d2==0&d3==1&d4==1&d5==1){
        dice1o3o4o5(dices);
        }
        
        else if(d1==1&d2==0&d3==0&d4==1&d5==0){
        dice1o4(dices);
        }else if(d1==1&d2==0&d3==0&d4==1&d5==1){
        dice1o4o5(dices);
        }
        
        else if(d1==1&d2==0&d3==0&d4==0&d5==1){
        dice1o5(dices);
        }
        
        else if(d1==0&d2==1&d3==1&d4==0&d5==0){
        dice2o3(dices);
        }else if(d1==0&d2==1&d3==1&d4==1&d5==0){
        dice2o3o4(dices);
        }else if(d1==0&d2==1&d3==1&d4==0&d5==1){
        dice2o3o5(dices);
        }else if(d1==0&d2==1&d3==1&d4==1&d5==1){
        dice2o3o4o5(dices);
        }
        
        else if(d1==0&d2==1&d3==0&d4==1&d5==0){
        dice2o4(dices);
        }else if(d1==0&d2==1&d3==0&d4==1&d5==1){
        dice2o4o5(dices);
        }
        
        else if(d1==0&d2==1&d3==0&d4==0&d5==1){
        dice2o5(dices);
        }
        
        else if(d1==0&d2==0&d3==1&d4==1&d5==0){
        dice3o4(dices);
        }else if(d1==0&d2==0&d3==1&d4==0&d5==1){
        dice3o5(dices);
        }else if(d1==0&d2==0&d3==1&d4==1&d5==1){
        dice3o4o5(dices);
        }
        
        else if(d1==0&d2==0&d3==0&d4==1&d5==1){
        dice4o5(dices);
        }else if(d1==1&d2==1&d3==1&d4==1&d5==1){
        dice1o2o3o4o5(dices);
        
        }
       
        if(rounds.equals("Player 1's Turn")){
        
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btn1s2.setText("");
        btnchance2.setText("");
        btnyacht2.setText("");
        
        
        }else if(rounds.equals("Player 2's Turn")){
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btn1s.setText("");
        btnchance.setText("");
        btnyacht.setText("");
        
            
        }
        
        
        
        dices=btnroll.getText();
        

        
        ones(dices);
        twos(dices);
        threes(dices);
        fours(dices);
        fives(dices);
        sixes(dices);

        onepair(dices);
        twopair(dices);
        little(dices);
        big(dices);

        threeofkind(dices);
        fourofkind(dices);
        fullhouse(dices);

        chance(dices);
        yacht(dices);

        lblrdy.setVisible(true);

        if(roll>=0){
            lblrdy.setVisible(false);
            lblroll.setVisible(true);
        }else if(roll==0){
            lblrdy.setVisible(true);
            lblroll.setVisible(false);
        }
        
    }//GEN-LAST:event_btnrollActionPerformed

    private void btnlock1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlock1ActionPerformed
        // TODO add your handling code here:
if(lblDice1.isEnabled()){
        lblDice1.setEnabled(false);   
d1++;       
}else {
    d1--;
       lblDice1.setEnabled(true);
       }
    }//GEN-LAST:event_btnlock1ActionPerformed

    private void btnlock2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlock2ActionPerformed
        // TODO add your handling code here:
if(lblDice2.isEnabled()){
        lblDice2.setEnabled(false);   
d2++;       
}else {
    d2--;
       lblDice2.setEnabled(true);
       }
    }//GEN-LAST:event_btnlock2ActionPerformed

    private void btnlock3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlock3ActionPerformed
        // TODO add your handling code here:
if(lblDice3.isEnabled()){
        lblDice3.setEnabled(false);   
d3++;       
}else {
    d3--;
       lblDice3.setEnabled(true);
       }
    }//GEN-LAST:event_btnlock3ActionPerformed

    private void btnlock4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlock4ActionPerformed
        // TODO add your handling code here:
if(lblDice4.isEnabled()){
        lblDice4.setEnabled(false);   
d4++;       
}else {
    d4--;
       lblDice4.setEnabled(true);
       }
    }//GEN-LAST:event_btnlock4ActionPerformed

    private void btnlock5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlock5ActionPerformed
        // TODO add your handling code here:
if(lblDice5.isEnabled()){
        lblDice5.setEnabled(false);   
d5++;       
}else {
d5--;
       lblDice5.setEnabled(true);
       }
    }//GEN-LAST:event_btnlock5ActionPerformed

    private void btnagain2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnagain2ActionPerformed
        // TODO add your handling code here:
        roll++;

        if(roll>=1){
            btnagain2.setEnabled(false);
            btn1pl2.setEnabled(true);
            btn2pl2.setEnabled(true);
            roll=-0;
        }

        btnagain2.setEnabled(false);
        btnlock1.setEnabled(false);
        btnlock2.setEnabled(false);
        btnlock3.setEnabled(false);
        btnlock4.setEnabled(false);
        btnlock5.setEnabled(false);
        btnroll.setEnabled(false);
        btnchance.setEnabled(false);
        btnyacht.setEnabled(false);
        btnbig.setEnabled(false);
        btnlittle.setEnabled(false);
        btn4of.setEnabled(false);
        btn3of.setEnabled(false);
        btnpair.setEnabled(false);
        btntwopair.setEnabled(false);
        btnfull.setEnabled(false);
        btn1s.setEnabled(false);
        btn2s.setEnabled(false);
        btn3s.setEnabled(false);
        btn4s.setEnabled(false);
        btn5s.setEnabled(false);
        btn6s.setEnabled(false);

        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btn1s.setText("");
        btnchance.setText("");
        btnyacht.setText("");
        lblrounds.setText("");

        btnagain2.setEnabled(false);
        btnlock1.setEnabled(false);
        btnlock2.setEnabled(false);
        btnlock3.setEnabled(false);
        btnlock4.setEnabled(false);
        btnlock5.setEnabled(false);
        btnroll.setEnabled(false);
        btnchance2.setEnabled(false);
        btnyacht2.setEnabled(false);
        btnbig2.setEnabled(false);
        btnlittle2.setEnabled(false);
        btn4of2.setEnabled(false);
        btn3of2.setEnabled(false);
        btnpair2.setEnabled(false);
        btntwopair2.setEnabled(false);
        btnfull2.setEnabled(false);
        btn1s2.setEnabled(false);
        btn2s2.setEnabled(false);
        btn3s2.setEnabled(false);
        btn4s2.setEnabled(false);
        btn5s2.setEnabled(false);
        btn6s2.setEnabled(false);

        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btn1s2.setText("");
        btnchance2.setText("");
        btnyacht2.setText("");
        lblrounds.setText("");
        
        lblDice1.setText("Dice 1");
        lblDice2.setText("Dice 2");
        lblDice3.setText("Dice 3");
        lblDice4.setText("Dice 4");
        lblDice5.setText("Dice 5");
        lblDice1.setEnabled(false);
        lblDice2.setEnabled(false);
        lblDice3.setEnabled(false);
        lblDice4.setEnabled(false);
        lblDice5.setEnabled(false);
        
        bonu=0;
        top=0;
        bot=0;
        fin=0;
        lblbon.setText("0");
        lbltop.setText("0");
        lblbot.setText("0");
        lblfin.setText("0");
        
        bonu2=0;
        top2=0;
        bot2=0;
        fin2=0;
        lbl2pl.setText("");

        lbl2bonu.setText("");
        lbl2topt.setText("");
        lbl2bott.setText("");
        lbl2fina.setText("");
        lbl2bon.setText("");
        lbl2top.setText("");
        lbl2bot.setText("");
        lbl2fin.setText("");
        
        roll=0;
        d1=0;
        d2=0;
        d3=0;
        d4=0;
        d5=0;
    }//GEN-LAST:event_btnagain2ActionPerformed

    private void btnstart2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnstart2ActionPerformed
        // TODO add your handling code here:

        rounds=lblrounds.getText();
        roll++;

        if(rounds.equals("Player 1's Turn")){
        if(roll>=1){
            btnstart2.setEnabled(false);
            roll=1;
        }
        btnagain2.setEnabled(true);
        btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
        btnroll.setEnabled(true);
        btnchance.setEnabled(true);
        btnyacht.setEnabled(true);
        btnbig.setEnabled(true);
        btnlittle.setEnabled(true);
        btn4of.setEnabled(true);
        btn3of.setEnabled(true);
        btnpair.setEnabled(true);
        btntwopair.setEnabled(true);
        btnfull.setEnabled(true);
        btn1s.setEnabled(true);
        btn2s.setEnabled(true);
        btn3s.setEnabled(true);
        btn4s.setEnabled(true);
        btn5s.setEnabled(true);
        btn6s.setEnabled(true);

        btnchance2.setEnabled(true);
        btnyacht2.setEnabled(true);
        btnbig2.setEnabled(true);
        btnlittle2.setEnabled(true);
        btn4of2.setEnabled(true);
        btn3of2.setEnabled(true);
        btnpair2.setEnabled(true);
        btntwopair2.setEnabled(true);
        btnfull2.setEnabled(true);
        btn1s2.setEnabled(true);
        btn2s2.setEnabled(true);
        btn3s2.setEnabled(true);
        btn4s2.setEnabled(true);
        btn5s2.setEnabled(true);
        btn6s2.setEnabled(true);
        
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btn1s.setText("");
        btnchance.setText("");
        btnyacht.setText("");
        
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btn1s2.setText("");
        btnchance2.setText("");
        btnyacht2.setText("");

        lblDice1.setText("Dice 1");
        lblDice2.setText("Dice 2");
        lblDice3.setText("Dice 3");
        lblDice4.setText("Dice 4");
        lblDice5.setText("Dice 5");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);

        d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
        top=0;
        bot=0;
        fin=0;
        lbltop.setText("0");
        lblbot.setText("0");
        lblfin.setText("0");
        }else if(rounds.equals("Player 2's Turn")){
        if(roll>=1){
            btnstart2.setEnabled(false);
            roll=1;
        }
        btnagain2.setEnabled(true);
        btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
        btnroll.setEnabled(true);
        btnchance.setEnabled(true);
        btnyacht.setEnabled(true);
        btnbig.setEnabled(true);
        btnlittle.setEnabled(true);
        btn4of.setEnabled(true);
        btn3of.setEnabled(true);
        btnpair.setEnabled(true);
        btntwopair.setEnabled(true);
        btnfull.setEnabled(true);
        btn1s.setEnabled(true);
        btn2s.setEnabled(true);
        btn3s.setEnabled(true);
        btn4s.setEnabled(true);
        btn5s.setEnabled(true);
        btn6s.setEnabled(true);

        btnchance2.setEnabled(true);
        btnyacht2.setEnabled(true);
        btnbig2.setEnabled(true);
        btnlittle2.setEnabled(true);
        btn4of2.setEnabled(true);
        btn3of2.setEnabled(true);
        btnpair2.setEnabled(true);
        btntwopair2.setEnabled(true);
        btnfull2.setEnabled(true);
        btn1s2.setEnabled(true);
        btn2s2.setEnabled(true);
        btn3s2.setEnabled(true);
        btn4s2.setEnabled(true);
        btn5s2.setEnabled(true);
        btn6s2.setEnabled(true);
        
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btn1s.setText("");
        btnchance.setText("");
        btnyacht.setText("");
        
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btn1s2.setText("");
        btnchance2.setText("");
        btnyacht2.setText("");

        lblDice1.setText("Dice 1");
        lblDice2.setText("Dice 2");
        lblDice3.setText("Dice 3");
        lblDice4.setText("Dice 4");
        lblDice5.setText("Dice 5");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);

        d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
        top=0;
        bot=0;
        fin=0;
        lbltop.setText("0");
        lblbot.setText("0");
        lblfin.setText("0");
        }else{
        if(roll>=1){
            btnstart2.setEnabled(false);
            roll=1;
        }
        btnagain2.setEnabled(true);
        btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
        btnroll.setEnabled(true);
        btnchance.setEnabled(true);
        btnyacht.setEnabled(true);
        btnbig.setEnabled(true);
        btnlittle.setEnabled(true);
        btn4of.setEnabled(true);
        btn3of.setEnabled(true);
        btnpair.setEnabled(true);
        btntwopair.setEnabled(true);
        btnfull.setEnabled(true);
        btn1s.setEnabled(true);
        btn2s.setEnabled(true);
        btn3s.setEnabled(true);
        btn4s.setEnabled(true);
        btn5s.setEnabled(true);
        btn6s.setEnabled(true);

        btnchance.setEnabled(true);
        btnyacht.setEnabled(true);
        btnbig.setEnabled(true);
        btnlittle.setEnabled(true);
        btn4of.setEnabled(true);
        btn3of.setEnabled(true);
        btnpair.setEnabled(true);
        btntwopair.setEnabled(true);
        btnfull.setEnabled(true);
        btn1s.setEnabled(true);
        btn2s.setEnabled(true);
        btn3s.setEnabled(true);
        btn4s.setEnabled(true);
        btn5s.setEnabled(true);
        btn6s.setEnabled(true);
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btn1s.setText("");
        btnchance.setText("");
        btnyacht.setText("");

        lblDice1.setText("Dice 1");
        lblDice2.setText("Dice 2");
        lblDice3.setText("Dice 3");
        lblDice4.setText("Dice 4");
        lblDice5.setText("Dice 5");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);

        d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
        top=0;
        bot=0;
        fin=0;
        lbltop.setText("0");
        lblbot.setText("0");
        lblfin.setText("0");
        }
    }//GEN-LAST:event_btnstart2ActionPerformed

    private void btn2pl2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2pl2ActionPerformed
        // TODO add your handling code here:
        roll++;

        if(roll>=1){
            btn2pl2.setEnabled(false);
            btn1pl2.setEnabled(false);
            roll=0;
        }

        lbl1pl.setText("Player 1");
        lbl2pl.setText("Player 2");

        lbl2bonu.setText("Top Bonus:");
        lbl2topt.setText("Top Total:");
        lbl2bott.setText("Bottom Total:");
        lbl2fina.setText("Final Total:");

        lbl2bon.setText("0");
        lbl2top.setText("0");
        lbl2bot.setText("0");
        lbl2fin.setText("0");
        
        lbl2pl.setEnabled(true);

        lbl2bonu.setEnabled(true);
        lbl2topt.setEnabled(true);
        lbl2bott.setEnabled(true);
        lbl2fina.setEnabled(true);

        lbl2bon.setEnabled(true);
        lbl2top.setEnabled(true);
        lbl2bot.setEnabled(true);
        lbl2fin.setEnabled(true);
        
        btnroll1or2.setEnabled(true);
    }//GEN-LAST:event_btn2pl2ActionPerformed

    private void btn1pl2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1pl2ActionPerformed
        // TODO add your handling code here:
        roll++;

        if(roll>=1){
            btn2pl2.setEnabled(false);
            btn1pl2.setEnabled(false);
            btnstart2.setEnabled(true);
            roll=0;
        }

        lbl2pl.setText("");

        lbl2bonu.setText("");
        lbl2topt.setText("");
        lbl2bott.setText("");
        lbl2fina.setText("");

        lbl2bon.setText("");
        lbl2top.setText("");
        lbl2bot.setText("");
        lbl2fin.setText("");
        
        lbl2pl.setEnabled(false);

        lbl2bonu.setEnabled(false);
        lbl2topt.setEnabled(false);
        lbl2bott.setEnabled(false);
        lbl2fina.setEnabled(false);

        lbl2bon.setEnabled(false);
        lbl2top.setEnabled(false);
        lbl2bot.setEnabled(false);
        lbl2fin.setEnabled(false);
    }//GEN-LAST:event_btn1pl2ActionPerformed

    private void btn1sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1sActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btn1s.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn1s.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        one=btn1s.getText();
        top=top+Integer.valueOf(one);
        fin=fin+Integer.valueOf(one);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
           if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        
        }else{
        
        totalt=btn1s.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn1s.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            
        }
        one=btn1s.getText();
        top=top+Integer.valueOf(one);
        fin=fin+Integer.valueOf(one);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
           if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn1sActionPerformed

    private void btn2sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2sActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btn2s.getText();
        roll=Integer.valueOf(totalt);
        if(roll>=0){
            btnroll.setEnabled(true);
            btn2s.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        two=btn2s.getText();
        top=top+Integer.valueOf(two);
        fin=fin+Integer.valueOf(two);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
           if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        
        btn1s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }else{
        
        totalt=btn2s.getText();
        roll=Integer.valueOf(totalt);
        if(roll>=0){
            btnroll.setEnabled(true);
            btn2s.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
        }
        two=btn2s.getText();
        top=top+Integer.valueOf(two);
        fin=fin+Integer.valueOf(two);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
           if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        
        btn1s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
            
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn2sActionPerformed

    private void btn3sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3sActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btn3s.getText();
        roll=Integer.valueOf(totalt);
        if(roll>=0){
            btnroll.setEnabled(true);
            btn3s.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        three=btn3s.getText();
        top=top+Integer.valueOf(three);
        fin=fin+Integer.valueOf(three);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
           if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        btn2s.setText("");
        btn1s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        totalt=btn3s.getText();
        roll=Integer.valueOf(totalt);
        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            btn3s.setEnabled(false);
            roll=1;
        }
        three=btn3s.getText();
        top=top+Integer.valueOf(three);
        fin=fin+Integer.valueOf(three);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
           if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        btn2s.setText("");
        btn1s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn3sActionPerformed

    private void btn4sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4sActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btn4s.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn4s.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        four=btn4s.getText();
        top=top+Integer.valueOf(four);
        fin=fin+Integer.valueOf(four);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
           if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        btn2s.setText("");
        btn3s.setText("");
        btn1s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        totalt=btn4s.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            btn4s.setEnabled(false);
            roll=1;
        }
        four=btn4s.getText();
        top=top+Integer.valueOf(four);
        fin=fin+Integer.valueOf(four);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
           if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        btn2s.setText("");
        btn3s.setText("");
        btn1s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn4sActionPerformed

    private void btn5sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5sActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btn5s.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn5s.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        five=btn5s.getText();
        top=top+Integer.valueOf(five);
        fin=fin+Integer.valueOf(five);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
           if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn1s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        totalt=btn5s.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn5s.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            
        }
        five=btn5s.getText();
        top=top+Integer.valueOf(five);
        fin=fin+Integer.valueOf(five);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
           if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn1s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn5sActionPerformed

    private void btn6sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6sActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btn6s.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn6s.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        sixes=btn6s.getText();
        top=top+Integer.valueOf(sixes);
        fin=fin+Integer.valueOf(sixes);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
        if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn1s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        totalt=btn6s.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn6s.setEnabled(false);
            roll=1;
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
        }
        sixes=btn6s.getText();
        top=top+Integer.valueOf(sixes);
        fin=fin+Integer.valueOf(sixes);
        lbltop.setText(Integer.toString(top));
        lblfin.setText(Integer.toString(fin));
        if(top>=63&bonu<=0){
        lblbon.setText("50");
        bon=lblbon.getText();
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
        lblfin.setText(Integer.toString(fin));
        }else if (bonu<49){    
        bon="0";
        bonu=bonu+Integer.valueOf(bon);
        fin=fin+Integer.valueOf(bon);
     
        }
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn1s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn6sActionPerformed

    private void btnpairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpairActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btnpair.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnpair.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        onepair=btnpair.getText();
        bot=bot+Integer.valueOf(onepair);
        fin=fin+Integer.valueOf(onepair);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btn1s.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        
        totalt=btnpair.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            btnpair.setEnabled(false);
            roll=1;
            
        }
        onepair=btnpair.getText();
        bot=bot+Integer.valueOf(onepair);
        fin=fin+Integer.valueOf(onepair);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btn1s.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnpairActionPerformed

    private void btntwopairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntwopairActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btntwopair.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btntwopair.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        twopair=btntwopair.getText();
        bot=bot+Integer.valueOf(twopair);
        fin=fin+Integer.valueOf(twopair);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btn1s.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        
        totalt=btntwopair.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            btntwopair.setEnabled(false);
            roll=1;
            
        }
        twopair=btntwopair.getText();
        bot=bot+Integer.valueOf(twopair);
        fin=fin+Integer.valueOf(twopair);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btn1s.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btntwopairActionPerformed

    private void btn3ofActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ofActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btn3of.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn3of.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        threeofkind=btn3of.getText();
        bot=bot+Integer.valueOf(threeofkind);
        fin=fin+Integer.valueOf(threeofkind);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn1s.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        totalt=btn3of.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            btn3of.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            
        }
        threeofkind=btn3of.getText();
        bot=bot+Integer.valueOf(threeofkind);
        fin=fin+Integer.valueOf(threeofkind);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn1s.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn3ofActionPerformed

    private void btn4ofActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ofActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btn4of.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn4of.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            
            
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        fourofkind=btn4of.getText();
        bot=bot+Integer.valueOf(fourofkind);
        fin=fin+Integer.valueOf(fourofkind);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn1s.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        totalt=btn4of.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn4of.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            
        }
        fourofkind=btn4of.getText();
        bot=bot+Integer.valueOf(fourofkind);
        fin=fin+Integer.valueOf(fourofkind);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn1s.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn4ofActionPerformed

    private void btnlittleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlittleActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btnlittle.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            btnlittle.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        little=btnlittle.getText();
        bot=bot+Integer.valueOf(little);
        fin=fin+Integer.valueOf(little);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));

        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btn1s.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        totalt=btnlittle.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlittle.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            
        }
        little=btnlittle.getText();
        bot=bot+Integer.valueOf(little);
        fin=fin+Integer.valueOf(little);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));

        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btn1s.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnlittleActionPerformed

    private void btnbigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbigActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btnbig.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            btnbig.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        big=btnbig.getText();
        bot=bot+Integer.valueOf(big);
        fin=fin+Integer.valueOf(big);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btn1s.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        totalt=btnbig.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            btnbig.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            
        }
        big=btnbig.getText();
        bot=bot+Integer.valueOf(big);
        fin=fin+Integer.valueOf(big);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btn1s.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnbigActionPerformed

    private void btnfullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfullActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btnfull.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            btnfull.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        fullhouse=btnfull.getText();
        bot=bot+Integer.valueOf(fullhouse);
        fin=fin+Integer.valueOf(fullhouse);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));

        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btn1s.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        totalt=btnfull.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            btnfull.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            
        }
        fullhouse=btnfull.getText();
        bot=bot+Integer.valueOf(fullhouse);
        fin=fin+Integer.valueOf(fullhouse);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));

        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btn1s.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnfullActionPerformed

    private void btnyachtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnyachtActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btnyacht.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            btnyacht.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 2's Turn");
        }
        yacht=btnyacht.getText();
        bot=bot+Integer.valueOf(yacht);
        fin=fin+Integer.valueOf(yacht);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btn1s.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        totalt=btnyacht.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            btnyacht.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            
        }
        yacht=btnyacht.getText();
        bot=bot+Integer.valueOf(yacht);
        fin=fin+Integer.valueOf(yacht);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));
        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btn1s.setText("");
        btnchance.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnyachtActionPerformed

    private void btnchanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchanceActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 1's Turn")){
        totalt=btnchance.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            btnchance.setEnabled(false);
            roll=1;
            
            lblrounds.setText("Player 2's Turn");
        }
        chance=btnchance.getText();
        bot=bot+Integer.valueOf(chance);
        fin=fin+Integer.valueOf(chance);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));

        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btn1s.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }else{
        totalt=btnchance.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            btnchance.setEnabled(false);
            roll=1;
            
        }
        chance=btnchance.getText();
        bot=bot+Integer.valueOf(chance);
        fin=fin+Integer.valueOf(chance);
        lblbot.setText(Integer.toString(bot));
        lblfin.setText(Integer.toString(fin));

        btn2s.setText("");
        btn3s.setText("");
        btn4s.setText("");
        btn5s.setText("");
        btn6s.setText("");
        btnpair.setText("");
        btntwopair.setText("");
        btnbig.setText("");
        btnlittle.setText("");
        btnfull.setText("");
        btn3of.setText("");
        btn4of.setText("");
        btnyacht.setText("");
        btn1s.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnchanceActionPerformed

    private void btn1s2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1s2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btn1s2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn1s2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        one=btn1s2.getText();
        top2=top2+Integer.valueOf(one);
        fin2=fin2+Integer.valueOf(one);
        lbl2top.setText(Integer.toString(top2));
        lbl2fin.setText(Integer.toString(fin2));
           if(top2>=63&bonu2<=0){
        lbl2bon.setText("50");
        bon=lbl2bon.getText();
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
        lbl2fin.setText(Integer.toString(fin2));
        }else if (bonu2<49){    
        bon="0";
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
     
        }
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn1s2ActionPerformed

    private void btn2s2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2s2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btn2s2.getText();
        roll=Integer.valueOf(totalt);
        if(roll>=0){
            btnroll.setEnabled(true);
            btn2s2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        two=btn2s2.getText();
        top2=top2+Integer.valueOf(two);
        fin2=fin2+Integer.valueOf(two);
        lbl2top.setText(Integer.toString(top2));
        lbl2fin.setText(Integer.toString(fin2));
           if(top2>=63&bonu2<=0){
        lbl2bon.setText("50");
        bon=lbl2bon.getText();
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
        lbl2fin.setText(Integer.toString(fin2));
        }else if (bonu2<49){    
        bon="0";
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
     
        }
        
        btn1s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn2s2ActionPerformed

    private void btn3s2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3s2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btn3s2.getText();
        roll=Integer.valueOf(totalt);
        if(roll>=0){
            btnroll.setEnabled(true);
            btn3s2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        three=btn3s2.getText();
        top2=top2+Integer.valueOf(three);
        fin2=fin2+Integer.valueOf(three);
        lbl2top.setText(Integer.toString(top2));
        lbl2fin.setText(Integer.toString(fin2));
           if(top2>=63&bonu2<=0){
        lbl2bon.setText("50");
        bon=lbl2bon.getText();
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
        lbl2fin.setText(Integer.toString(fin2));
        }else if (bonu2<49){    
        bon="0";
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
     
        }
        btn2s2.setText("");
        btn1s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn3s2ActionPerformed

    private void btn4s2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4s2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btn4s2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn4s2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        four=btn4s2.getText();
        top2=top2+Integer.valueOf(four);
        fin2=fin2+Integer.valueOf(four);
        lbl2top.setText(Integer.toString(top2));
        lbl2fin.setText(Integer.toString(fin2));
           if(top2>=63&bonu2<=0){
        lbl2bon.setText("50");
        bon=lbl2bon.getText();
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
        lbl2fin.setText(Integer.toString(fin2));
        }else if (bonu2<49){    
        bon="0";
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
     
        }
        btn2s2.setText("");
        btn3s2.setText("");
        btn1s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn4s2ActionPerformed

    private void btn5s2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5s2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btn5s2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn5s2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        five=btn5s2.getText();
        top2=top2+Integer.valueOf(five);
        fin2=fin2+Integer.valueOf(five);
        lbl2top.setText(Integer.toString(top2));
        lbl2fin.setText(Integer.toString(fin2));
           if(top2>=63&bonu2<=0){
        lbl2bon.setText("50");
        bon=lbl2bon.getText();
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
        lbl2fin.setText(Integer.toString(fin2));
        }else if (bonu2<49){    
        bon="0";
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
     
        }
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn1s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn5s2ActionPerformed

    private void btn6s2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6s2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btn6s2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn6s2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        sixes=btn6s2.getText();
        top2=top2+Integer.valueOf(sixes);
        fin2=fin2+Integer.valueOf(sixes);
        lbl2top.setText(Integer.toString(top2));
        lbl2fin.setText(Integer.toString(fin2));
        if(top2>=63&bonu2<=0){
        lbl2bon.setText("50");
        bon=lbl2bon.getText();
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
        lbl2fin.setText(Integer.toString(fin2));
        }else if (bonu2<49){    
        bon="0";
        bonu2=bonu2+Integer.valueOf(bon);
        fin2=fin2+Integer.valueOf(bon);
     
        }
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn1s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn6s2ActionPerformed

    private void btnpair2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpair2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btnpair2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnpair2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        onepair=btnpair2.getText();
        bot2=bot2+Integer.valueOf(onepair);
        fin2=fin2+Integer.valueOf(onepair);
        lbl2bot.setText(Integer.toString(bot2));
        lbl2fin.setText(Integer.toString(fin2));
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btn1s2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnpair2ActionPerformed

    private void btntwopair2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntwopair2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btntwopair2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btntwopair2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        twopair=btntwopair2.getText();
        bot2=bot2+Integer.valueOf(twopair);
        fin2=fin2+Integer.valueOf(twopair);
        lbl2bot.setText(Integer.toString(bot2));
        lbl2fin.setText(Integer.toString(fin2));
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btn1s2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btntwopair2ActionPerformed

    private void btn3of2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3of2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btn3of2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn3of2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        threeofkind=btn3of2.getText();
        bot2=bot2+Integer.valueOf(threeofkind);
        fin2=fin2+Integer.valueOf(threeofkind);
        lbl2bot.setText(Integer.toString(bot2));
        lbl2fin.setText(Integer.toString(fin2));
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn1s2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn3of2ActionPerformed

    private void btn4of2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4of2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btn4of2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btn4of2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        fourofkind=btn4of2.getText();
        bot2=bot2+Integer.valueOf(fourofkind);
        fin2=fin2+Integer.valueOf(fourofkind);
        lbl2bot.setText(Integer.toString(bot2));
        lbl2fin.setText(Integer.toString(fin2));
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn1s2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btn4of2ActionPerformed

    private void btnlittle2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlittle2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btnlittle2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnlittle2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        little=btnlittle2.getText();
        bot2=bot2+Integer.valueOf(little);
        fin2=fin2+Integer.valueOf(little);
        lbl2bot.setText(Integer.toString(bot2));
        lbl2fin.setText(Integer.toString(fin2));

        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btn1s2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnlittle2ActionPerformed

    private void btnbig2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbig2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btnbig2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnbig2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        big=btnbig2.getText();
        bot2=bot2+Integer.valueOf(big);
        fin2=fin2+Integer.valueOf(big);
        lbl2bot.setText(Integer.toString(bot2));
        lbl2fin.setText(Integer.toString(fin2));
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btn1s2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnbig2ActionPerformed

    private void btnfull2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfull2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btnfull2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnfull2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        fullhouse=btnfull2.getText();
        bot2=bot2+Integer.valueOf(fullhouse);
        fin2=fin2+Integer.valueOf(fullhouse);
        lbl2bot.setText(Integer.toString(bot2));
        lbl2fin.setText(Integer.toString(fin2));

        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btn1s2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnfull2ActionPerformed

    private void btnyacht2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnyacht2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btnyacht2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnyacht2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        yacht=btnyacht2.getText();
        bot2=bot2+Integer.valueOf(yacht);
        fin2=fin2+Integer.valueOf(yacht);
        lbl2bot.setText(Integer.toString(bot2));
        lbl2fin.setText(Integer.toString(fin2));
        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btn1s2.setText("");
        btnchance2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnyacht2ActionPerformed

    private void btnchance2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchance2ActionPerformed
        // TODO add your handling code here:
        rounds=lblrounds.getText();
        try{
        if(rounds.equals("Player 2's Turn")){
        totalt=btnchance2.getText();
        roll=Integer.valueOf(totalt);

        if(roll>=0){
            btnroll.setEnabled(true);
            btnchance2.setEnabled(false);
            btnlock1.setEnabled(false);
            btnlock2.setEnabled(false);
            btnlock3.setEnabled(false);
            btnlock4.setEnabled(false);
            btnlock5.setEnabled(false);
            d1=0;
            d2=0;
            d3=0;
            d4=0;
            d5=0;
            roll=1;
            lblrounds.setText("Player 1's Turn");
        }
        chance=btnchance2.getText();
        bot2=bot2+Integer.valueOf(chance);
        fin2=fin2+Integer.valueOf(chance);
        lbl2bot.setText(Integer.toString(bot2));
        lbl2fin.setText(Integer.toString(fin2));

        btn2s2.setText("");
        btn3s2.setText("");
        btn4s2.setText("");
        btn5s2.setText("");
        btn6s2.setText("");
        btnpair2.setText("");
        btntwopair2.setText("");
        btnbig2.setText("");
        btnlittle2.setText("");
        btnfull2.setText("");
        btn3of2.setText("");
        btn4of2.setText("");
        btnyacht2.setText("");
        btn1s2.setText("");
        lblDice1.setEnabled(true);
        lblDice2.setEnabled(true);
        lblDice3.setEnabled(true);
        lblDice4.setEnabled(true);
        lblDice5.setEnabled(true);
       
        }
        }
        catch(java.lang.NumberFormatException error){
        JOptionPane.showMessageDialog(null,
                "Theres no point to choose!\n Please Roll The Dices!",
                "Roll The Dices!",
                JOptionPane.ERROR_MESSAGE);
        return;
        }
    }//GEN-LAST:event_btnchance2ActionPerformed

    private void btnroll1or2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnroll1or2ActionPerformed
        // TODO add your handling code here:
        roll++;
        
        startdice=(int)(Math.random()*6+1);
        dice=Integer.toString(startdice);
        
        
        
        if(roll==1){
        lbl1pdice.setText(dice);
        p1=lbl1pdice.getText();
        lblplayer.setText("2P");    
        p1=lbl1pdice.getText();
        pone=Integer.valueOf(p1);
        }
        
        else if(roll==2){
        lbl2pdice.setText(dice);
        p1=lbl2pdice.getText();
        btnroll1or2.setEnabled(false);
        btnfirst.setEnabled(true);
        btnsecond.setEnabled(true);
        p2=lbl2pdice.getText();
        ptwo=Integer.valueOf(p2);
        
        }
        
    }//GEN-LAST:event_btnroll1or2ActionPerformed

    private void btnfirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfirstActionPerformed
        // TODO add your handling code here:
        p1=lbl1pdice.getText();
        pone=Integer.valueOf(p1);
        p2=lbl2pdice.getText();
        ptwo=Integer.valueOf(p2);
        if(pone>ptwo){
        btnstart2.setEnabled(true);
            lblrounds.setText("Player 1's Turn");
            btnfirst.setEnabled(false);
            btnsecond.setEnabled(false);
            lblplayer.setText("1P");
            lbl1pdice.setText("1P");
            lbl2pdice.setText("2P");
        }else if(ptwo>pone){
        btnstart2.setEnabled(true);
        lblrounds.setText("Player 2's Turn");
        btnfirst.setEnabled(false);
            btnsecond.setEnabled(false);
            lblplayer.setText("1P");
            lbl1pdice.setText("1P");
            lbl2pdice.setText("2P");
        }else if(ptwo==pone){
        btnstart2.setEnabled(false);
        btnfirst.setEnabled(false);
            btnsecond.setEnabled(false);
            lblplayer.setText("1P");
            lbl1pdice.setText("1P");
            lbl2pdice.setText("2P");
            btnroll1or2.setEnabled(true);
            roll=0;
        }
        
    }//GEN-LAST:event_btnfirstActionPerformed

    private void btnsecondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsecondActionPerformed
        // TODO add your handling code here:
        
        p1=lbl1pdice.getText();
        pone=Integer.valueOf(p1);
        p2=lbl2pdice.getText();
        ptwo=Integer.valueOf(p2);
        if(pone>ptwo){
        
            lblrounds.setText("Player 2's Turn");
            btnstart2.setEnabled(true);
            btnfirst.setEnabled(false);
            btnsecond.setEnabled(false);
            lblplayer.setText("1P");
            lbl1pdice.setText("1P");
            lbl2pdice.setText("2P");
        }else if(ptwo>pone){
        btnstart2.setEnabled(true);
        btnfirst.setEnabled(false);
            btnsecond.setEnabled(false);
        lblrounds.setText("Player 1's Turn");
        lblplayer.setText("1P");
        lbl1pdice.setText("1P");
            lbl2pdice.setText("2P");
        }else if(ptwo==pone){
        btnstart2.setEnabled(false);
        btnfirst.setEnabled(false);
            btnsecond.setEnabled(false);
            lblplayer.setText("1P");
            lbl1pdice.setText("1P");
            lbl2pdice.setText("2P");
        btnroll1or2.setEnabled(true);
        roll=0;
        }
    }//GEN-LAST:event_btnsecondActionPerformed

    
    private void ones(String one){

        rounds=lblrounds.getText();
        
        if(rounds.equals("Player 1's Turn")){
        if(dice1==1&dice2==1&dice3==1&dice4==1&dice5==1){
        btn1s.setText("5");
        
        }else if(dice1==1&dice2==1&dice3==1&dice4==1){
        btn1s.setText("4");
        }else if(dice2==1&dice3==1&dice4==1&dice5==1){
        btn1s.setText("4");
        }else if(dice3==1&dice4==1&dice5==1&dice1==1){
        btn1s.setText("4");
        }else if(dice4==1&dice5==1&dice1==1&dice2==1){
        btn1s.setText("4");
        }else if(dice5==1&dice1==1&dice2==1&dice3==1){
        btn1s.setText("4");
        }
        
        
        else if(dice1==1&dice2==1&dice3==1){
        btn1s.setText("3");
        }else if(dice1==1&dice2==1&dice4==1){
        btn1s.setText("3");
        }else if(dice1==1&dice2==1&dice5==1){
        btn1s.setText("3");
        }else if(dice1==1&dice3==1&dice4==1){
        btn1s.setText("3");
        }else if(dice1==1&dice3==1&dice5==1){
        btn1s.setText("3");
        }else if(dice1==1&dice4==1&dice5==1){
        btn1s.setText("3");
        }
        else if(dice2==1&dice3==1&dice4==1){
        btn1s.setText("3");
        }else if(dice2==1&dice3==1&dice5==1){
        btn1s.setText("3");
        }else if(dice2==1&dice4==1&dice5==1){
        btn1s.setText("3");
        }else if(dice3==1&dice4==1&dice5==1){
        btn1s.setText("3");
        }
        
        
        else if(dice1==1&dice2==1){
        btn1s.setText("2");
        }else if(dice1==1&dice3==1){
        btn1s.setText("2");
        }else if(dice1==1&dice4==1){
        btn1s.setText("2");
        }else if(dice1==1&dice5==1){
        btn1s.setText("2");
        }
        else if(dice2==1&dice3==1){
        btn1s.setText("2");
        }else if(dice2==1&dice4==1){
        btn1s.setText("2");
        }else if(dice2==1&dice5==1){
        btn1s.setText("2");
        }
        else if(dice3==1&dice4==1){
        btn1s.setText("2");
        }else if(dice3==1&dice5==1){
        btn1s.setText("2");
        }
        else if(dice4==1&dice5==1){
        btn1s.setText("2");
        }
        
        else if(dice1==1){
        btn1s.setText("1");
        }else if(dice2==1){
        btn1s.setText("1");
        }else if(dice3==1){
        btn1s.setText("1");
        }else if(dice4==1){
        btn1s.setText("1");
        }else if(dice5==1){
        btn1s.setText("1");
        }
        
        else
        {
        btn1s.setText("0");
        }
            
        }else if(rounds.equals("Player 2's Turn")){
        if(dice1==1&dice2==1&dice3==1&dice4==1&dice5==1){
        btn1s2.setText("5");
        
        }else if(dice1==1&dice2==1&dice3==1&dice4==1){
        btn1s2.setText("4");
        }else if(dice2==1&dice3==1&dice4==1&dice5==1){
        btn1s2.setText("4");
        }else if(dice3==1&dice4==1&dice5==1&dice1==1){
        btn1s2.setText("4");
        }else if(dice4==1&dice5==1&dice1==1&dice2==1){
        btn1s2.setText("4");
        }else if(dice5==1&dice1==1&dice2==1&dice3==1){
        btn1s2.setText("4");
        }
        
        
        else if(dice1==1&dice2==1&dice3==1){
        btn1s2.setText("3");
        }else if(dice1==1&dice2==1&dice4==1){
        btn1s2.setText("3");
        }else if(dice1==1&dice2==1&dice5==1){
        btn1s2.setText("3");
        }else if(dice1==1&dice3==1&dice4==1){
        btn1s2.setText("3");
        }else if(dice1==1&dice3==1&dice5==1){
        btn1s2.setText("3");
        }else if(dice1==1&dice4==1&dice5==1){
        btn1s2.setText("3");
        }
        else if(dice2==1&dice3==1&dice4==1){
        btn1s2.setText("3");
        }else if(dice2==1&dice3==1&dice5==1){
        btn1s2.setText("3");
        }else if(dice2==1&dice4==1&dice5==1){
        btn1s2.setText("3");
        }else if(dice3==1&dice4==1&dice5==1){
        btn1s2.setText("3");
        }
        
        
        else if(dice1==1&dice2==1){
        btn1s2.setText("2");
        }else if(dice1==1&dice3==1){
        btn1s2.setText("2");
        }else if(dice1==1&dice4==1){
        btn1s2.setText("2");
        }else if(dice1==1&dice5==1){
        btn1s2.setText("2");
        }
        else if(dice2==1&dice3==1){
        btn1s2.setText("2");
        }else if(dice2==1&dice4==1){
        btn1s2.setText("2");
        }else if(dice2==1&dice5==1){
        btn1s2.setText("2");
        }
        else if(dice3==1&dice4==1){
        btn1s2.setText("2");
        }else if(dice3==1&dice5==1){
        btn1s2.setText("2");
        }
        else if(dice4==1&dice5==1){
        btn1s2.setText("2");
        }
        
        else if(dice1==1){
        btn1s2.setText("1");
        }else if(dice2==1){
        btn1s2.setText("1");
        }else if(dice3==1){
        btn1s2.setText("1");
        }else if(dice4==1){
        btn1s2.setText("1");
        }else if(dice5==1){
        btn1s2.setText("1");
        }
        
        else
        {
        btn1s2.setText("0");
        }
        }else if(rounds.equals("")){
        
        if(dice1==1&dice2==1&dice3==1&dice4==1&dice5==1){
        btn1s.setText("5");
        
        }else if(dice1==1&dice2==1&dice3==1&dice4==1){
        btn1s.setText("4");
        }else if(dice2==1&dice3==1&dice4==1&dice5==1){
        btn1s.setText("4");
        }else if(dice3==1&dice4==1&dice5==1&dice1==1){
        btn1s.setText("4");
        }else if(dice4==1&dice5==1&dice1==1&dice2==1){
        btn1s.setText("4");
        }else if(dice5==1&dice1==1&dice2==1&dice3==1){
        btn1s.setText("4");
        }
        
        
        else if(dice1==1&dice2==1&dice3==1){
        btn1s.setText("3");
        }else if(dice1==1&dice2==1&dice4==1){
        btn1s.setText("3");
        }else if(dice1==1&dice2==1&dice5==1){
        btn1s.setText("3");
        }else if(dice1==1&dice3==1&dice4==1){
        btn1s.setText("3");
        }else if(dice1==1&dice3==1&dice5==1){
        btn1s.setText("3");
        }else if(dice1==1&dice4==1&dice5==1){
        btn1s.setText("3");
        }
        else if(dice2==1&dice3==1&dice4==1){
        btn1s.setText("3");
        }else if(dice2==1&dice3==1&dice5==1){
        btn1s.setText("3");
        }else if(dice2==1&dice4==1&dice5==1){
        btn1s.setText("3");
        }else if(dice3==1&dice4==1&dice5==1){
        btn1s.setText("3");
        }
        
        
        else if(dice1==1&dice2==1){
        btn1s.setText("2");
        }else if(dice1==1&dice3==1){
        btn1s.setText("2");
        }else if(dice1==1&dice4==1){
        btn1s.setText("2");
        }else if(dice1==1&dice5==1){
        btn1s.setText("2");
        }
        else if(dice2==1&dice3==1){
        btn1s.setText("2");
        }else if(dice2==1&dice4==1){
        btn1s.setText("2");
        }else if(dice2==1&dice5==1){
        btn1s.setText("2");
        }
        else if(dice3==1&dice4==1){
        btn1s.setText("2");
        }else if(dice3==1&dice5==1){
        btn1s.setText("2");
        }
        else if(dice4==1&dice5==1){
        btn1s.setText("2");
        }
        
        else if(dice1==1){
        btn1s.setText("1");
        }else if(dice2==1){
        btn1s.setText("1");
        }else if(dice3==1){
        btn1s.setText("1");
        }else if(dice4==1){
        btn1s.setText("1");
        }else if(dice5==1){
        btn1s.setText("1");
        }
        
        else
        {
        btn1s.setText("0");
        }
        }
}
private void twos(String two){
        rounds=lblrounds.getText();
    
        if(rounds.equals("Player 1's Turn")){
        if(dice1==2&dice2==2&dice3==2&dice4==2&dice5==2){
        btn2s.setText("10");
        
        }else if(dice1==2&dice2==2&dice3==2&dice4==2){
        btn2s.setText("8");
        }else if(dice2==2&dice3==2&dice4==2&dice5==2){
        btn2s.setText("8");
        }else if(dice3==2&dice4==2&dice5==2&dice1==2){
        btn2s.setText("8");
        }else if(dice4==2&dice5==2&dice1==2&dice2==2){
        btn2s.setText("8");
        }else if(dice5==2&dice1==2&dice2==2&dice3==2){
        btn2s.setText("8");
        }
        
        
        else if(dice1==2&dice2==2&dice3==2){
        btn2s.setText("6");
        }else if(dice1==2&dice2==2&dice4==2){
        btn2s.setText("6");
        }else if(dice1==2&dice2==2&dice5==2){
        btn2s.setText("6");
        }else if(dice1==2&dice3==2&dice4==2){
        btn2s.setText("6");
        }else if(dice1==2&dice3==2&dice5==2){
        btn2s.setText("6");
        }else if(dice1==2&dice4==2&dice5==2){
        btn2s.setText("6");
        }
        else if(dice2==2&dice3==2&dice4==2){
        btn2s.setText("6");
        }else if(dice2==2&dice3==2&dice5==2){
        btn2s.setText("6");
        }else if(dice2==2&dice4==2&dice5==2){
        btn2s.setText("6");
        }else if(dice3==2&dice4==2&dice5==2){
        btn2s.setText("6");
        }
        
        
        else if(dice1==2&dice2==2){
        btn2s.setText("4");
        }else if(dice1==2&dice3==2){
        btn2s.setText("4");
        }else if(dice1==2&dice4==2){
        btn2s.setText("4");
        }else if(dice1==2&dice5==2){
        btn2s.setText("4");
        }
        else if(dice2==2&dice3==2){
        btn2s.setText("4");
        }else if(dice2==2&dice4==2){
        btn2s.setText("4");
        }else if(dice2==2&dice5==2){
        btn2s.setText("4");
        }
        else if(dice3==2&dice4==2){
        btn2s.setText("4");
        }else if(dice3==2&dice5==2){
        btn2s.setText("4");
        }
        else if(dice4==2&dice5==2){
        btn2s.setText("4");
        }
        
        else if(dice1==2){
        btn2s.setText("2");
        }else if(dice2==2){
        btn2s.setText("2");
        }else if(dice3==2){
        btn2s.setText("2");
        }else if(dice4==2){
        btn2s.setText("2");
        }else if(dice5==2){
        btn2s.setText("2");
        }
        
        else
        {
        btn2s.setText("0");
        }
        }else if(rounds.equals("Player 2's Turn")){
        if(dice1==2&dice2==2&dice3==2&dice4==2&dice5==2){
        btn2s2.setText("10");
        
        }else if(dice1==2&dice2==2&dice3==2&dice4==2){
        btn2s2.setText("8");
        }else if(dice2==2&dice3==2&dice4==2&dice5==2){
        btn2s2.setText("8");
        }else if(dice3==2&dice4==2&dice5==2&dice1==2){
        btn2s2.setText("8");
        }else if(dice4==2&dice5==2&dice1==2&dice2==2){
        btn2s2.setText("8");
        }else if(dice5==2&dice1==2&dice2==2&dice3==2){
        btn2s2.setText("8");
        }
        
        
        else if(dice1==2&dice2==2&dice3==2){
        btn2s2.setText("6");
        }else if(dice1==2&dice2==2&dice4==2){
        btn2s2.setText("6");
        }else if(dice1==2&dice2==2&dice5==2){
        btn2s2.setText("6");
        }else if(dice1==2&dice3==2&dice4==2){
        btn2s2.setText("6");
        }else if(dice1==2&dice3==2&dice5==2){
        btn2s2.setText("6");
        }else if(dice1==2&dice4==2&dice5==2){
        btn2s2.setText("6");
        }
        else if(dice2==2&dice3==2&dice4==2){
        btn2s2.setText("6");
        }else if(dice2==2&dice3==2&dice5==2){
        btn2s2.setText("6");
        }else if(dice2==2&dice4==2&dice5==2){
        btn2s2.setText("6");
        }else if(dice3==2&dice4==2&dice5==2){
        btn2s2.setText("6");
        }
        
        
        else if(dice1==2&dice2==2){
        btn2s2.setText("4");
        }else if(dice1==2&dice3==2){
        btn2s2.setText("4");
        }else if(dice1==2&dice4==2){
        btn2s2.setText("4");
        }else if(dice1==2&dice5==2){
        btn2s2.setText("4");
        }
        else if(dice2==2&dice3==2){
        btn2s2.setText("4");
        }else if(dice2==2&dice4==2){
        btn2s2.setText("4");
        }else if(dice2==2&dice5==2){
        btn2s2.setText("4");
        }
        else if(dice3==2&dice4==2){
        btn2s2.setText("4");
        }else if(dice3==2&dice5==2){
        btn2s2.setText("4");
        }
        else if(dice4==2&dice5==2){
        btn2s2.setText("4");
        }
        
        else if(dice1==2){
        btn2s2.setText("2");
        }else if(dice2==2){
        btn2s2.setText("2");
        }else if(dice3==2){
        btn2s2.setText("2");
        }else if(dice4==2){
        btn2s2.setText("2");
        }else if(dice5==2){
        btn2s2.setText("2");
        }
        
        else
        {
        btn2s2.setText("0");
        }
        }else{
        if(dice1==2&dice2==2&dice3==2&dice4==2&dice5==2){
        btn2s.setText("10");
        
        }else if(dice1==2&dice2==2&dice3==2&dice4==2){
        btn2s.setText("8");
        }else if(dice2==2&dice3==2&dice4==2&dice5==2){
        btn2s.setText("8");
        }else if(dice3==2&dice4==2&dice5==2&dice1==2){
        btn2s.setText("8");
        }else if(dice4==2&dice5==2&dice1==2&dice2==2){
        btn2s.setText("8");
        }else if(dice5==2&dice1==2&dice2==2&dice3==2){
        btn2s.setText("8");
        }
        
        
        else if(dice1==2&dice2==2&dice3==2){
        btn2s.setText("6");
        }else if(dice1==2&dice2==2&dice4==2){
        btn2s.setText("6");
        }else if(dice1==2&dice2==2&dice5==2){
        btn2s.setText("6");
        }else if(dice1==2&dice3==2&dice4==2){
        btn2s.setText("6");
        }else if(dice1==2&dice3==2&dice5==2){
        btn2s.setText("6");
        }else if(dice1==2&dice4==2&dice5==2){
        btn2s.setText("6");
        }
        else if(dice2==2&dice3==2&dice4==2){
        btn2s.setText("6");
        }else if(dice2==2&dice3==2&dice5==2){
        btn2s.setText("6");
        }else if(dice2==2&dice4==2&dice5==2){
        btn2s.setText("6");
        }else if(dice3==2&dice4==2&dice5==2){
        btn2s.setText("6");
        }
        
        
        else if(dice1==2&dice2==2){
        btn2s.setText("4");
        }else if(dice1==2&dice3==2){
        btn2s.setText("4");
        }else if(dice1==2&dice4==2){
        btn2s.setText("4");
        }else if(dice1==2&dice5==2){
        btn2s.setText("4");
        }
        else if(dice2==2&dice3==2){
        btn2s.setText("4");
        }else if(dice2==2&dice4==2){
        btn2s.setText("4");
        }else if(dice2==2&dice5==2){
        btn2s.setText("4");
        }
        else if(dice3==2&dice4==2){
        btn2s.setText("4");
        }else if(dice3==2&dice5==2){
        btn2s.setText("4");
        }
        else if(dice4==2&dice5==2){
        btn2s.setText("4");
        }
        
        else if(dice1==2){
        btn2s.setText("2");
        }else if(dice2==2){
        btn2s.setText("2");
        }else if(dice3==2){
        btn2s.setText("2");
        }else if(dice4==2){
        btn2s.setText("2");
        }else if(dice5==2){
        btn2s.setText("2");
        }
        
        else
        {
        btn2s.setText("0");
        }
        }
}
private void threes(String three){

        rounds=lblrounds.getText();
    
        if(rounds.equals("Player 1's Turn")){
        
        if(dice1==3&dice2==3&dice3==3&dice4==3&dice5==3){
        btn3s.setText("15");
        
        }else if(dice1==3&dice2==3&dice3==3&dice4==3){
        btn3s.setText("12");
        }else if(dice2==3&dice3==3&dice4==3&dice5==3){
        btn3s.setText("12");
        }else if(dice3==3&dice4==3&dice5==3&dice1==3){
        btn3s.setText("12");
        }else if(dice4==3&dice5==3&dice1==3&dice2==3){
        btn3s.setText("12");
        }else if(dice5==3&dice1==3&dice2==3&dice3==3){
        btn3s.setText("12");
        }
        
        
        else if(dice1==3&dice2==3&dice3==3){
        btn3s.setText("9");
        }else if(dice1==3&dice2==3&dice4==3){
        btn3s.setText("9");
        }else if(dice1==3&dice2==3&dice5==3){
        btn3s.setText("9");
        }else if(dice1==3&dice3==3&dice4==3){
        btn3s.setText("9");
        }else if(dice1==3&dice3==3&dice5==3){
        btn3s.setText("9");
        }else if(dice1==3&dice4==3&dice5==3){
        btn3s.setText("9");
        }
        else if(dice2==3&dice3==3&dice4==3){
        btn3s.setText("9");
        }else if(dice2==3&dice3==3&dice5==3){
        btn3s.setText("9");
        }else if(dice2==3&dice4==3&dice5==3){
        btn3s.setText("9");
        }else if(dice3==3&dice4==3&dice5==3){
        btn3s.setText("9");
        }
        
        
        else if(dice1==3&dice2==3){
        btn3s.setText("6");
        }else if(dice1==3&dice3==3){
        btn3s.setText("6");
        }else if(dice1==3&dice4==3){
        btn3s.setText("6");
        }else if(dice1==3&dice5==3){
        btn3s.setText("6");
        }
        else if(dice2==3&dice3==3){
        btn3s.setText("6");
        }else if(dice2==3&dice4==3){
        btn3s.setText("6");
        }else if(dice2==3&dice5==3){
        btn3s.setText("6");
        }
        else if(dice3==3&dice4==3){
        btn3s.setText("6");
        }else if(dice3==3&dice5==3){
        btn3s.setText("6");
        }
        else if(dice4==3&dice5==3){
        btn3s.setText("6");
        }
        
        else if(dice1==3){
        btn3s.setText("3");
        }else if(dice2==3){
        btn3s.setText("3");
        }else if(dice3==3){
        btn3s.setText("3");
        }else if(dice4==3){
        btn3s.setText("3");
        }else if(dice5==3){
        btn3s.setText("3");
        }
        
        else
        {
        btn3s.setText("0");
        }
        }else if(rounds.equals("Player 2's Turn")){
        if(dice1==3&dice2==3&dice3==3&dice4==3&dice5==3){
        btn3s2.setText("15");
        
        }else if(dice1==3&dice2==3&dice3==3&dice4==3){
        btn3s2.setText("12");
        }else if(dice2==3&dice3==3&dice4==3&dice5==3){
        btn3s2.setText("12");
        }else if(dice3==3&dice4==3&dice5==3&dice1==3){
        btn3s2.setText("12");
        }else if(dice4==3&dice5==3&dice1==3&dice2==3){
        btn3s2.setText("12");
        }else if(dice5==3&dice1==3&dice2==3&dice3==3){
        btn3s2.setText("12");
        }
        
        
        else if(dice1==3&dice2==3&dice3==3){
        btn3s2.setText("9");
        }else if(dice1==3&dice2==3&dice4==3){
        btn3s2.setText("9");
        }else if(dice1==3&dice2==3&dice5==3){
        btn3s2.setText("9");
        }else if(dice1==3&dice3==3&dice4==3){
        btn3s2.setText("9");
        }else if(dice1==3&dice3==3&dice5==3){
        btn3s2.setText("9");
        }else if(dice1==3&dice4==3&dice5==3){
        btn3s2.setText("9");
        }
        else if(dice2==3&dice3==3&dice4==3){
        btn3s2.setText("9");
        }else if(dice2==3&dice3==3&dice5==3){
        btn3s2.setText("9");
        }else if(dice2==3&dice4==3&dice5==3){
        btn3s2.setText("9");
        }else if(dice3==3&dice4==3&dice5==3){
        btn3s2.setText("9");
        }
        
        
        else if(dice1==3&dice2==3){
        btn3s2.setText("6");
        }else if(dice1==3&dice3==3){
        btn3s2.setText("6");
        }else if(dice1==3&dice4==3){
        btn3s2.setText("6");
        }else if(dice1==3&dice5==3){
        btn3s2.setText("6");
        }
        else if(dice2==3&dice3==3){
        btn3s2.setText("6");
        }else if(dice2==3&dice4==3){
        btn3s2.setText("6");
        }else if(dice2==3&dice5==3){
        btn3s2.setText("6");
        }
        else if(dice3==3&dice4==3){
        btn3s2.setText("6");
        }else if(dice3==3&dice5==3){
        btn3s2.setText("6");
        }
        else if(dice4==3&dice5==3){
        btn3s2.setText("6");
        }
        
        else if(dice1==3){
        btn3s2.setText("3");
        }else if(dice2==3){
        btn3s2.setText("3");
        }else if(dice3==3){
        btn3s2.setText("3");
        }else if(dice4==3){
        btn3s2.setText("3");
        }else if(dice5==3){
        btn3s2.setText("3");
        }
        
        else
        {
        btn3s2.setText("0");
        }
        }else if(rounds.equals("")){
        if(dice1==3&dice2==3&dice3==3&dice4==3&dice5==3){
        btn3s.setText("15");
        
        }else if(dice1==3&dice2==3&dice3==3&dice4==3){
        btn3s.setText("12");
        }else if(dice2==3&dice3==3&dice4==3&dice5==3){
        btn3s.setText("12");
        }else if(dice3==3&dice4==3&dice5==3&dice1==3){
        btn3s.setText("12");
        }else if(dice4==3&dice5==3&dice1==3&dice2==3){
        btn3s.setText("12");
        }else if(dice5==3&dice1==3&dice2==3&dice3==3){
        btn3s.setText("12");
        }
        
        
        else if(dice1==3&dice2==3&dice3==3){
        btn3s.setText("9");
        }else if(dice1==3&dice2==3&dice4==3){
        btn3s.setText("9");
        }else if(dice1==3&dice2==3&dice5==3){
        btn3s.setText("9");
        }else if(dice1==3&dice3==3&dice4==3){
        btn3s.setText("9");
        }else if(dice1==3&dice3==3&dice5==3){
        btn3s.setText("9");
        }else if(dice1==3&dice4==3&dice5==3){
        btn3s.setText("9");
        }
        else if(dice2==3&dice3==3&dice4==3){
        btn3s.setText("9");
        }else if(dice2==3&dice3==3&dice5==3){
        btn3s.setText("9");
        }else if(dice2==3&dice4==3&dice5==3){
        btn3s.setText("9");
        }else if(dice3==3&dice4==3&dice5==3){
        btn3s.setText("9");
        }
        
        
        else if(dice1==3&dice2==3){
        btn3s.setText("6");
        }else if(dice1==3&dice3==3){
        btn3s.setText("6");
        }else if(dice1==3&dice4==3){
        btn3s.setText("6");
        }else if(dice1==3&dice5==3){
        btn3s.setText("6");
        }
        else if(dice2==3&dice3==3){
        btn3s.setText("6");
        }else if(dice2==3&dice4==3){
        btn3s.setText("6");
        }else if(dice2==3&dice5==3){
        btn3s.setText("6");
        }
        else if(dice3==3&dice4==3){
        btn3s.setText("6");
        }else if(dice3==3&dice5==3){
        btn3s.setText("6");
        }
        else if(dice4==3&dice5==3){
        btn3s.setText("6");
        }
        
        else if(dice1==3){
        btn3s.setText("3");
        }else if(dice2==3){
        btn3s.setText("3");
        }else if(dice3==3){
        btn3s.setText("3");
        }else if(dice4==3){
        btn3s.setText("3");
        }else if(dice5==3){
        btn3s.setText("3");
        }
        
        else
        {
        btn3s.setText("0");
        }
        }
}
private void fours(String four){
        
        rounds=lblrounds.getText();
    
        if(rounds.equals("Player 1's Turn")){
        
        if(dice1==4&dice2==4&dice3==4&dice4==4&dice5==4){
        btn4s.setText("20");
        
        }else if(dice1==4&dice2==4&dice3==4&dice4==4){
        btn4s.setText("16");
        }else if(dice2==4&dice3==4&dice4==4&dice5==4){
        btn4s.setText("16");
        }else if(dice3==4&dice4==4&dice5==4&dice1==4){
        btn4s.setText("16");
        }else if(dice4==4&dice5==4&dice1==4&dice2==4){
        btn4s.setText("16");
        }else if(dice5==4&dice1==4&dice2==4&dice3==4){
        btn4s.setText("16");
        }
        
        
        else if(dice1==4&dice2==4&dice3==4){
        btn4s.setText("12");
        }else if(dice1==4&dice2==4&dice4==4){
        btn4s.setText("12");
        }else if(dice1==4&dice2==4&dice5==4){
        btn4s.setText("12");
        }else if(dice1==4&dice3==4&dice4==4){
        btn4s.setText("12");
        }else if(dice1==4&dice3==4&dice5==4){
        btn4s.setText("12");
        }else if(dice1==4&dice4==4&dice5==4){
        btn4s.setText("12");
        }
        else if(dice2==4&dice3==4&dice4==4){
        btn4s.setText("12");
        }else if(dice2==4&dice3==4&dice5==4){
        btn4s.setText("12");
        }else if(dice2==4&dice4==4&dice5==4){
        btn4s.setText("12");
        }else if(dice3==4&dice4==4&dice5==4){
        btn4s.setText("12");
        }
        
        
        else if(dice1==4&dice2==4){
        btn4s.setText("8");
        }else if(dice1==4&dice3==4){
        btn4s.setText("8");
        }else if(dice1==4&dice4==4){
        btn4s.setText("8");
        }else if(dice1==4&dice5==4){
        btn4s.setText("8");
        }
        else if(dice2==4&dice3==4){
        btn4s.setText("8");
        }else if(dice2==4&dice4==4){
        btn4s.setText("8");
        }else if(dice2==4&dice5==4){
        btn4s.setText("8");
        }
        else if(dice3==4&dice4==4){
        btn4s.setText("8");
        }else if(dice3==4&dice5==4){
        btn4s.setText("8");
        }
        else if(dice4==4&dice5==4){
        btn4s.setText("8");
        }
        
        else if(dice1==4){
        btn4s.setText("4");
        }else if(dice2==4){
        btn4s.setText("4");
        }else if(dice3==4){
        btn4s.setText("4");
        }else if(dice4==4){
        btn4s.setText("4");
        }else if(dice5==4){
        btn4s.setText("4");
        }
        
        else
        {
        btn4s.setText("0");
        }
        }else if(rounds.equals("Player 2's Turn")){
        
        if(dice1==4&dice2==4&dice3==4&dice4==4&dice5==4){
        btn4s2.setText("20");
        
        }else if(dice1==4&dice2==4&dice3==4&dice4==4){
        btn4s2.setText("16");
        }else if(dice2==4&dice3==4&dice4==4&dice5==4){
        btn4s2.setText("16");
        }else if(dice3==4&dice4==4&dice5==4&dice1==4){
        btn4s2.setText("16");
        }else if(dice4==4&dice5==4&dice1==4&dice2==4){
        btn4s2.setText("16");
        }else if(dice5==4&dice1==4&dice2==4&dice3==4){
        btn4s2.setText("16");
        }
        
        
        else if(dice1==4&dice2==4&dice3==4){
        btn4s2.setText("12");
        }else if(dice1==4&dice2==4&dice4==4){
        btn4s2.setText("12");
        }else if(dice1==4&dice2==4&dice5==4){
        btn4s2.setText("12");
        }else if(dice1==4&dice3==4&dice4==4){
        btn4s2.setText("12");
        }else if(dice1==4&dice3==4&dice5==4){
        btn4s2.setText("12");
        }else if(dice1==4&dice4==4&dice5==4){
        btn4s2.setText("12");
        }
        else if(dice2==4&dice3==4&dice4==4){
        btn4s2.setText("12");
        }else if(dice2==4&dice3==4&dice5==4){
        btn4s2.setText("12");
        }else if(dice2==4&dice4==4&dice5==4){
        btn4s2.setText("12");
        }else if(dice3==4&dice4==4&dice5==4){
        btn4s2.setText("12");
        }
        
        
        else if(dice1==4&dice2==4){
        btn4s2.setText("8");
        }else if(dice1==4&dice3==4){
        btn4s2.setText("8");
        }else if(dice1==4&dice4==4){
        btn4s2.setText("8");
        }else if(dice1==4&dice5==4){
        btn4s2.setText("8");
        }
        else if(dice2==4&dice3==4){
        btn4s2.setText("8");
        }else if(dice2==4&dice4==4){
        btn4s2.setText("8");
        }else if(dice2==4&dice5==4){
        btn4s2.setText("8");
        }
        else if(dice3==4&dice4==4){
        btn4s2.setText("8");
        }else if(dice3==4&dice5==4){
        btn4s2.setText("8");
        }
        else if(dice4==4&dice5==4){
        btn4s2.setText("8");
        }
        
        else if(dice1==4){
        btn4s2.setText("4");
        }else if(dice2==4){
        btn4s2.setText("4");
        }else if(dice3==4){
        btn4s2.setText("4");
        }else if(dice4==4){
        btn4s2.setText("4");
        }else if(dice5==4){
        btn4s2.setText("4");
        }
        
        else
        {
        btn4s2.setText("0");
        }
        }else if(rounds.equals("")){
        
        if(dice1==4&dice2==4&dice3==4&dice4==4&dice5==4){
        btn4s.setText("20");
        
        }else if(dice1==4&dice2==4&dice3==4&dice4==4){
        btn4s.setText("16");
        }else if(dice2==4&dice3==4&dice4==4&dice5==4){
        btn4s.setText("16");
        }else if(dice3==4&dice4==4&dice5==4&dice1==4){
        btn4s.setText("16");
        }else if(dice4==4&dice5==4&dice1==4&dice2==4){
        btn4s.setText("16");
        }else if(dice5==4&dice1==4&dice2==4&dice3==4){
        btn4s.setText("16");
        }
        
        
        else if(dice1==4&dice2==4&dice3==4){
        btn4s.setText("12");
        }else if(dice1==4&dice2==4&dice4==4){
        btn4s.setText("12");
        }else if(dice1==4&dice2==4&dice5==4){
        btn4s.setText("12");
        }else if(dice1==4&dice3==4&dice4==4){
        btn4s.setText("12");
        }else if(dice1==4&dice3==4&dice5==4){
        btn4s.setText("12");
        }else if(dice1==4&dice4==4&dice5==4){
        btn4s.setText("12");
        }
        else if(dice2==4&dice3==4&dice4==4){
        btn4s.setText("12");
        }else if(dice2==4&dice3==4&dice5==4){
        btn4s.setText("12");
        }else if(dice2==4&dice4==4&dice5==4){
        btn4s.setText("12");
        }else if(dice3==4&dice4==4&dice5==4){
        btn4s.setText("12");
        }
        
        
        else if(dice1==4&dice2==4){
        btn4s.setText("8");
        }else if(dice1==4&dice3==4){
        btn4s.setText("8");
        }else if(dice1==4&dice4==4){
        btn4s.setText("8");
        }else if(dice1==4&dice5==4){
        btn4s.setText("8");
        }
        else if(dice2==4&dice3==4){
        btn4s.setText("8");
        }else if(dice2==4&dice4==4){
        btn4s.setText("8");
        }else if(dice2==4&dice5==4){
        btn4s.setText("8");
        }
        else if(dice3==4&dice4==4){
        btn4s.setText("8");
        }else if(dice3==4&dice5==4){
        btn4s.setText("8");
        }
        else if(dice4==4&dice5==4){
        btn4s.setText("8");
        }
        
        else if(dice1==4){
        btn4s.setText("4");
        }else if(dice2==4){
        btn4s.setText("4");
        }else if(dice3==4){
        btn4s.setText("4");
        }else if(dice4==4){
        btn4s.setText("4");
        }else if(dice5==4){
        btn4s.setText("4");
        }
        
        else
        {
        btn4s.setText("0");
        }
        }
}
private void fives(String five){

        rounds=lblrounds.getText();
    
        if(rounds.equals("Player 2's Turn")){
        if(dice1==5&dice2==5&dice3==5&dice4==5&dice5==5){
        btn5s2.setText("25");
        
        }else if(dice1==5&dice2==5&dice3==5&dice4==5){
        btn5s2.setText("20");
        }else if(dice2==5&dice3==5&dice4==5&dice5==5){
        btn5s2.setText("20");
        }else if(dice3==5&dice4==5&dice5==5&dice1==5){
        btn5s2.setText("20");
        }else if(dice4==5&dice5==5&dice1==5&dice2==5){
        btn5s2.setText("20");
        }else if(dice5==5&dice1==5&dice2==5&dice3==5){
        btn5s2.setText("20");
        }
        
        
        else if(dice1==5&dice2==5&dice3==5){
        btn5s2.setText("15");
        }else if(dice1==5&dice2==5&dice4==5){
        btn5s2.setText("15");
        }else if(dice1==5&dice2==5&dice5==5){
        btn5s2.setText("15");
        }else if(dice1==5&dice3==5&dice4==5){
        btn5s2.setText("15");
        }else if(dice1==5&dice3==5&dice5==5){
        btn5s2.setText("15");
        }else if(dice1==5&dice4==5&dice5==5){
        btn5s2.setText("15");
        }
        else if(dice2==5&dice3==5&dice4==5){
        btn5s2.setText("15");
        }else if(dice2==5&dice3==5&dice5==5){
        btn5s2.setText("15");
        }else if(dice2==5&dice4==5&dice5==5){
        btn5s2.setText("15");
        }else if(dice3==5&dice4==5&dice5==5){
        btn5s2.setText("15");
        }
        
        
        else if(dice1==5&dice2==5){
        btn5s2.setText("10");
        }else if(dice1==5&dice3==5){
        btn5s2.setText("10");
        }else if(dice1==5&dice4==5){
        btn5s2.setText("10");
        }else if(dice1==5&dice5==5){
        btn5s2.setText("10");
        }
        else if(dice2==5&dice3==5){
        btn5s2.setText("10");
        }else if(dice2==5&dice4==5){
        btn5s2.setText("10");
        }else if(dice2==5&dice5==5){
        btn5s2.setText("10");
        }
        else if(dice3==5&dice4==5){
        btn5s2.setText("10");
        }else if(dice3==5&dice5==5){
        btn5s2.setText("10");
        }
        else if(dice4==5&dice5==5){
        btn5s2.setText("10");
        }
        
        else if(dice1==5){
        btn5s2.setText("5");
        }else if(dice2==5){
        btn5s2.setText("5");
        }else if(dice3==5){
        btn5s2.setText("5");
        }else if(dice4==5){
        btn5s2.setText("5");
        }else if(dice5==5){
        btn5s2.setText("5");
        }
        
        else
        {
        btn5s2.setText("0");
        }
        }else if(rounds.equals("")){
        if(dice1==5&dice2==5&dice3==5&dice4==5&dice5==5){
        btn5s.setText("25");
        
        }else if(dice1==5&dice2==5&dice3==5&dice4==5){
        btn5s.setText("20");
        }else if(dice2==5&dice3==5&dice4==5&dice5==5){
        btn5s.setText("20");
        }else if(dice3==5&dice4==5&dice5==5&dice1==5){
        btn5s.setText("20");
        }else if(dice4==5&dice5==5&dice1==5&dice2==5){
        btn5s.setText("20");
        }else if(dice5==5&dice1==5&dice2==5&dice3==5){
        btn5s.setText("20");
        }
        
        
        else if(dice1==5&dice2==5&dice3==5){
        btn5s.setText("15");
        }else if(dice1==5&dice2==5&dice4==5){
        btn5s.setText("15");
        }else if(dice1==5&dice2==5&dice5==5){
        btn5s.setText("15");
        }else if(dice1==5&dice3==5&dice4==5){
        btn5s.setText("15");
        }else if(dice1==5&dice3==5&dice5==5){
        btn5s.setText("15");
        }else if(dice1==5&dice4==5&dice5==5){
        btn5s.setText("15");
        }
        else if(dice2==5&dice3==5&dice4==5){
        btn5s.setText("15");
        }else if(dice2==5&dice3==5&dice5==5){
        btn5s.setText("15");
        }else if(dice2==5&dice4==5&dice5==5){
        btn5s.setText("15");
        }else if(dice3==5&dice4==5&dice5==5){
        btn5s.setText("15");
        }
        
        
        else if(dice1==5&dice2==5){
        btn5s.setText("10");
        }else if(dice1==5&dice3==5){
        btn5s.setText("10");
        }else if(dice1==5&dice4==5){
        btn5s.setText("10");
        }else if(dice1==5&dice5==5){
        btn5s.setText("10");
        }
        else if(dice2==5&dice3==5){
        btn5s.setText("10");
        }else if(dice2==5&dice4==5){
        btn5s.setText("10");
        }else if(dice2==5&dice5==5){
        btn5s.setText("10");
        }
        else if(dice3==5&dice4==5){
        btn5s.setText("10");
        }else if(dice3==5&dice5==5){
        btn5s.setText("10");
        }
        else if(dice4==5&dice5==5){
        btn5s.setText("10");
        }
        
        else if(dice1==5){
        btn5s.setText("5");
        }else if(dice2==5){
        btn5s.setText("5");
        }else if(dice3==5){
        btn5s.setText("5");
        }else if(dice4==5){
        btn5s.setText("5");
        }else if(dice5==5){
        btn5s.setText("5");
        }
        
        else
        {
        btn5s.setText("0");
        }
        }else if(rounds.equals("Player 1's Turn")){
        if(dice1==5&dice2==5&dice3==5&dice4==5&dice5==5){
        btn5s.setText("25");
        
        }else if(dice1==5&dice2==5&dice3==5&dice4==5){
        btn5s.setText("20");
        }else if(dice2==5&dice3==5&dice4==5&dice5==5){
        btn5s.setText("20");
        }else if(dice3==5&dice4==5&dice5==5&dice1==5){
        btn5s.setText("20");
        }else if(dice4==5&dice5==5&dice1==5&dice2==5){
        btn5s.setText("20");
        }else if(dice5==5&dice1==5&dice2==5&dice3==5){
        btn5s.setText("20");
        }
        
        
        else if(dice1==5&dice2==5&dice3==5){
        btn5s.setText("15");
        }else if(dice1==5&dice2==5&dice4==5){
        btn5s.setText("15");
        }else if(dice1==5&dice2==5&dice5==5){
        btn5s.setText("15");
        }else if(dice1==5&dice3==5&dice4==5){
        btn5s.setText("15");
        }else if(dice1==5&dice3==5&dice5==5){
        btn5s.setText("15");
        }else if(dice1==5&dice4==5&dice5==5){
        btn5s.setText("15");
        }
        else if(dice2==5&dice3==5&dice4==5){
        btn5s.setText("15");
        }else if(dice2==5&dice3==5&dice5==5){
        btn5s.setText("15");
        }else if(dice2==5&dice4==5&dice5==5){
        btn5s.setText("15");
        }else if(dice3==5&dice4==5&dice5==5){
        btn5s.setText("15");
        }
        
        
        else if(dice1==5&dice2==5){
        btn5s.setText("10");
        }else if(dice1==5&dice3==5){
        btn5s.setText("10");
        }else if(dice1==5&dice4==5){
        btn5s.setText("10");
        }else if(dice1==5&dice5==5){
        btn5s.setText("10");
        }
        else if(dice2==5&dice3==5){
        btn5s.setText("10");
        }else if(dice2==5&dice4==5){
        btn5s.setText("10");
        }else if(dice2==5&dice5==5){
        btn5s.setText("10");
        }
        else if(dice3==5&dice4==5){
        btn5s.setText("10");
        }else if(dice3==5&dice5==5){
        btn5s.setText("10");
        }
        else if(dice4==5&dice5==5){
        btn5s.setText("10");
        }
        
        else if(dice1==5){
        btn5s.setText("5");
        }else if(dice2==5){
        btn5s.setText("5");
        }else if(dice3==5){
        btn5s.setText("5");
        }else if(dice4==5){
        btn5s.setText("5");
        }else if(dice5==5){
        btn5s.setText("5");
        }
        
        else
        {
        btn5s.setText("0");
        }
        }
}
private void sixes(String six){

        rounds=lblrounds.getText();
    
        if(rounds.equals("Player 1's Turn")){
        if(dice1==6&dice2==6&dice3==6&dice4==6&dice5==6){
        btn6s.setText("30");
        
        }else if(dice1==6&dice2==6&dice3==6&dice4==6){
        btn6s.setText("24");
        }else if(dice2==6&dice3==6&dice4==6&dice5==6){
        btn6s.setText("24");
        }else if(dice3==6&dice4==6&dice5==6&dice1==6){
        btn6s.setText("24");
        }else if(dice4==6&dice5==6&dice1==6&dice2==6){
        btn6s.setText("24");
        }else if(dice5==6&dice1==6&dice2==6&dice3==6){
        btn6s.setText("24");
        }
        
        
        else if(dice1==6&dice2==6&dice3==6){
        btn6s.setText("18");
        }else if(dice1==6&dice2==6&dice4==6){
        btn6s.setText("18");
        }else if(dice1==6&dice2==6&dice5==6){
        btn6s.setText("18");
        }else if(dice1==6&dice3==6&dice4==6){
        btn6s.setText("18");
        }else if(dice1==6&dice3==6&dice5==6){
        btn6s.setText("18");
        }else if(dice1==6&dice4==6&dice5==6){
        btn6s.setText("18");
        }
        else if(dice2==6&dice3==6&dice4==6){
        btn6s.setText("18");
        }else if(dice2==6&dice3==6&dice5==6){
        btn6s.setText("18");
        }else if(dice2==6&dice4==6&dice5==6){
        btn6s.setText("18");
        }else if(dice3==6&dice4==6&dice5==6){
        btn6s.setText("18");
        }
        
        
        else if(dice1==6&dice2==6){
        btn6s.setText("12");
        }else if(dice1==6&dice3==6){
        btn6s.setText("12");
        }else if(dice1==6&dice4==6){
        btn6s.setText("12");
        }else if(dice1==6&dice5==6){
        btn6s.setText("12");
        }
        else if(dice2==6&dice3==6){
        btn6s.setText("12");
        }else if(dice2==6&dice4==6){
        btn6s.setText("12");
        }else if(dice2==6&dice5==6){
        btn6s.setText("12");
        }
        else if(dice3==6&dice4==6){
        btn6s.setText("12");
        }else if(dice3==6&dice5==6){
        btn6s.setText("12");
        }
        else if(dice4==6&dice5==6){
        btn6s.setText("12");
        }
        
        else if(dice1==6){
        btn6s.setText("6");
        }else if(dice2==6){
        btn6s.setText("6");
        }else if(dice3==6){
        btn6s.setText("6");
        }else if(dice4==6){
        btn6s.setText("6");
        }else if(dice5==6){
        btn6s.setText("6");
        }
        
        else
        {
        btn6s.setText("0");
        }
        }else if(rounds.equals("Player 2's Turn")){
        if(dice1==6&dice2==6&dice3==6&dice4==6&dice5==6){
        btn6s2.setText("30");
        
        }else if(dice1==6&dice2==6&dice3==6&dice4==6){
        btn6s2.setText("24");
        }else if(dice2==6&dice3==6&dice4==6&dice5==6){
        btn6s2.setText("24");
        }else if(dice3==6&dice4==6&dice5==6&dice1==6){
        btn6s2.setText("24");
        }else if(dice4==6&dice5==6&dice1==6&dice2==6){
        btn6s2.setText("24");
        }else if(dice5==6&dice1==6&dice2==6&dice3==6){
        btn6s2.setText("24");
        }
        
        
        else if(dice1==6&dice2==6&dice3==6){
        btn6s2.setText("18");
        }else if(dice1==6&dice2==6&dice4==6){
        btn6s2.setText("18");
        }else if(dice1==6&dice2==6&dice5==6){
        btn6s2.setText("18");
        }else if(dice1==6&dice3==6&dice4==6){
        btn6s2.setText("18");
        }else if(dice1==6&dice3==6&dice5==6){
        btn6s2.setText("18");
        }else if(dice1==6&dice4==6&dice5==6){
        btn6s2.setText("18");
        }
        else if(dice2==6&dice3==6&dice4==6){
        btn6s2.setText("18");
        }else if(dice2==6&dice3==6&dice5==6){
        btn6s2.setText("18");
        }else if(dice2==6&dice4==6&dice5==6){
        btn6s2.setText("18");
        }else if(dice3==6&dice4==6&dice5==6){
        btn6s2.setText("18");
        }
        
        
        else if(dice1==6&dice2==6){
        btn6s2.setText("12");
        }else if(dice1==6&dice3==6){
        btn6s2.setText("12");
        }else if(dice1==6&dice4==6){
        btn6s2.setText("12");
        }else if(dice1==6&dice5==6){
        btn6s2.setText("12");
        }
        else if(dice2==6&dice3==6){
        btn6s2.setText("12");
        }else if(dice2==6&dice4==6){
        btn6s2.setText("12");
        }else if(dice2==6&dice5==6){
        btn6s2.setText("12");
        }
        else if(dice3==6&dice4==6){
        btn6s2.setText("12");
        }else if(dice3==6&dice5==6){
        btn6s2.setText("12");
        }
        else if(dice4==6&dice5==6){
        btn6s2.setText("12");
        }
        
        else if(dice1==6){
        btn6s2.setText("6");
        }else if(dice2==6){
        btn6s2.setText("6");
        }else if(dice3==6){
        btn6s2.setText("6");
        }else if(dice4==6){
        btn6s2.setText("6");
        }else if(dice5==6){
        btn6s2.setText("6");
        }
        
        else
        {
        btn6s2.setText("0");
        }
        }else if(rounds.equals("")){
        if(dice1==6&dice2==6&dice3==6&dice4==6&dice5==6){
        btn6s.setText("30");
        
        }else if(dice1==6&dice2==6&dice3==6&dice4==6){
        btn6s.setText("24");
        }else if(dice2==6&dice3==6&dice4==6&dice5==6){
        btn6s.setText("24");
        }else if(dice3==6&dice4==6&dice5==6&dice1==6){
        btn6s.setText("24");
        }else if(dice4==6&dice5==6&dice1==6&dice2==6){
        btn6s.setText("24");
        }else if(dice5==6&dice1==6&dice2==6&dice3==6){
        btn6s.setText("24");
        }
        
        
        else if(dice1==6&dice2==6&dice3==6){
        btn6s.setText("18");
        }else if(dice1==6&dice2==6&dice4==6){
        btn6s.setText("18");
        }else if(dice1==6&dice2==6&dice5==6){
        btn6s.setText("18");
        }else if(dice1==6&dice3==6&dice4==6){
        btn6s.setText("18");
        }else if(dice1==6&dice3==6&dice5==6){
        btn6s.setText("18");
        }else if(dice1==6&dice4==6&dice5==6){
        btn6s.setText("18");
        }
        else if(dice2==6&dice3==6&dice4==6){
        btn6s.setText("18");
        }else if(dice2==6&dice3==6&dice5==6){
        btn6s.setText("18");
        }else if(dice2==6&dice4==6&dice5==6){
        btn6s.setText("18");
        }else if(dice3==6&dice4==6&dice5==6){
        btn6s.setText("18");
        }
        
        
        else if(dice1==6&dice2==6){
        btn6s.setText("12");
        }else if(dice1==6&dice3==6){
        btn6s.setText("12");
        }else if(dice1==6&dice4==6){
        btn6s.setText("12");
        }else if(dice1==6&dice5==6){
        btn6s.setText("12");
        }
        else if(dice2==6&dice3==6){
        btn6s.setText("12");
        }else if(dice2==6&dice4==6){
        btn6s.setText("12");
        }else if(dice2==6&dice5==6){
        btn6s.setText("12");
        }
        else if(dice3==6&dice4==6){
        btn6s.setText("12");
        }else if(dice3==6&dice5==6){
        btn6s.setText("12");
        }
        else if(dice4==6&dice5==6){
        btn6s.setText("12");
        }
        
        else if(dice1==6){
        btn6s.setText("6");
        }else if(dice2==6){
        btn6s.setText("6");
        }else if(dice3==6){
        btn6s.setText("6");
        }else if(dice4==6){
        btn6s.setText("6");
        }else if(dice5==6){
        btn6s.setText("6");
        }
        
        else
        {
        btn6s.setText("0");
        }
        }
}

private void onepair(String onepair){

    rounds=lblrounds.getText();
    
    if(rounds.equals("Player 1's Turn")){
    if(dice1==dice2){
    total=dice1+dice2;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice1==dice3){
    total=dice1+dice3;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice1==dice4){
    total=dice1+dice4;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice1==dice5){
    total=dice1+dice5;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }

    else if(dice2==dice3){
    total=dice2+dice3;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice2==dice4){
    total=dice2+dice4;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice2==dice5){
    total=dice2+dice5;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }

    else if(dice3==dice4){
    total=dice3+dice4;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice3==dice5){
    total=dice3+dice5;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }

    else if(dice4==dice5){
    total=dice4+dice5;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }

    else{
    total=0;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    
    }
    }else if(rounds.equals("Player 2's Turn")){
    if(dice1==dice2){
    total=dice1+dice2;
    totalt=Integer.toString(total);
    btnpair2.setText(totalt);
    }
    else if(dice1==dice3){
    total=dice1+dice3;
    totalt=Integer.toString(total);
    btnpair2.setText(totalt);
    }
    else if(dice1==dice4){
    total=dice1+dice4;
    totalt=Integer.toString(total);
    btnpair2.setText(totalt);
    }
    else if(dice1==dice5){
    total=dice1+dice5;
    totalt=Integer.toString(total);
    btnpair2.setText(totalt);
    }

    else if(dice2==dice3){
    total=dice2+dice3;
    totalt=Integer.toString(total);
    btnpair2.setText(totalt);
    }
    else if(dice2==dice4){
    total=dice2+dice4;
    totalt=Integer.toString(total);
    btnpair2.setText(totalt);
    }
    else if(dice2==dice5){
    total=dice2+dice5;
    totalt=Integer.toString(total);
    btnpair2.setText(totalt);
    }

    else if(dice3==dice4){
    total=dice3+dice4;
    totalt=Integer.toString(total);
    btnpair2.setText(totalt);
    }
    else if(dice3==dice5){
    total=dice3+dice5;
    totalt=Integer.toString(total);
    btnpair2.setText(totalt);
    }

    else if(dice4==dice5){
    total=dice4+dice5;
    totalt=Integer.toString(total);
    btnpair2.setText(totalt);
    }

    else{
    total=0;
    totalt=Integer.toString(total);
    btnpair2.setText(totalt);
    
    }
    }else if(rounds.equals("")){
    if(dice1==dice2){
    total=dice1+dice2;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice1==dice3){
    total=dice1+dice3;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice1==dice4){
    total=dice1+dice4;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice1==dice5){
    total=dice1+dice5;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }

    else if(dice2==dice3){
    total=dice2+dice3;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice2==dice4){
    total=dice2+dice4;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice2==dice5){
    total=dice2+dice5;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }

    else if(dice3==dice4){
    total=dice3+dice4;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }
    else if(dice3==dice5){
    total=dice3+dice5;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }

    else if(dice4==dice5){
    total=dice4+dice5;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    }

    else{
    total=0;
    totalt=Integer.toString(total);
    btnpair.setText(totalt);
    
    }
    }
}
private void twopair(String twopair){

    rounds=lblrounds.getText();
    
    if(rounds.equals("Player 1's Turn")){
    if
    (dice1==dice2&dice3==dice4){
    total=dice1+dice2+dice3+dice4;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice2&dice3==dice5){
    total=dice1+dice2+dice3+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice2&dice4==dice5){
    total=dice1+dice2+dice4+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    
    
    
    else if(dice1==dice3&dice2==dice4){
    total=dice1+dice3+dice2+dice4;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice3&dice2==dice5){
    total=dice1+dice3+dice2+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice3&dice4==dice5){
    total=dice1+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    
 
    
    else if(dice1==dice4&dice2==dice3){
    total=dice1+dice4+dice2+dice3;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice4&dice2==dice5){
    total=dice1+dice4+dice2+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice4&dice3==dice5){
    total=dice1+dice4+dice3+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    
    
    else if(dice1==dice5&dice2==dice3){
    total=dice1+dice5+dice2+dice3;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice5&dice2==dice4){
    total=dice1+dice5+dice2+dice4;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice5&dice3==dice4){
    total=dice1+dice5+dice3+dice4;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    
    
    else if(dice2==dice3&dice4==dice5){
    total=dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice2==dice4&dice3==dice5){
    total=dice2+dice4+dice3+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice2==dice5&dice3==dice4){
    total=dice2+dice5+dice3+dice4;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    
    
    else{
    total=0;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    
    }
    }else if(rounds.equals("Player 2's Turn")){
    if
    (dice1==dice2&dice3==dice4){
    total=dice1+dice2+dice3+dice4;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    else if(dice1==dice2&dice3==dice5){
    total=dice1+dice2+dice3+dice5;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    else if(dice1==dice2&dice4==dice5){
    total=dice1+dice2+dice4+dice5;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    
    
    
    else if(dice1==dice3&dice2==dice4){
    total=dice1+dice3+dice2+dice4;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    else if(dice1==dice3&dice2==dice5){
    total=dice1+dice3+dice2+dice5;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    else if(dice1==dice3&dice4==dice5){
    total=dice1+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    
 
    
    else if(dice1==dice4&dice2==dice3){
    total=dice1+dice4+dice2+dice3;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    else if(dice1==dice4&dice2==dice5){
    total=dice1+dice4+dice2+dice5;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    else if(dice1==dice4&dice3==dice5){
    total=dice1+dice4+dice3+dice5;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    
    
    else if(dice1==dice5&dice2==dice3){
    total=dice1+dice5+dice2+dice3;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    else if(dice1==dice5&dice2==dice4){
    total=dice1+dice5+dice2+dice4;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    else if(dice1==dice5&dice3==dice4){
    total=dice1+dice5+dice3+dice4;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    
    
    else if(dice2==dice3&dice4==dice5){
    total=dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    else if(dice2==dice4&dice3==dice5){
    total=dice2+dice4+dice3+dice5;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    else if(dice2==dice5&dice3==dice4){
    total=dice2+dice5+dice3+dice4;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    }
    
    
    else{
    total=0;
    totalt=Integer.toString(total);
    btntwopair2.setText(totalt);
    
    }
    }else if(rounds.equals("")){
    if
    (dice1==dice2&dice3==dice4){
    total=dice1+dice2+dice3+dice4;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice2&dice3==dice5){
    total=dice1+dice2+dice3+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice2&dice4==dice5){
    total=dice1+dice2+dice4+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    
    
    
    else if(dice1==dice3&dice2==dice4){
    total=dice1+dice3+dice2+dice4;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice3&dice2==dice5){
    total=dice1+dice3+dice2+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice3&dice4==dice5){
    total=dice1+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    
 
    
    else if(dice1==dice4&dice2==dice3){
    total=dice1+dice4+dice2+dice3;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice4&dice2==dice5){
    total=dice1+dice4+dice2+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice4&dice3==dice5){
    total=dice1+dice4+dice3+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    
    
    else if(dice1==dice5&dice2==dice3){
    total=dice1+dice5+dice2+dice3;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice5&dice2==dice4){
    total=dice1+dice5+dice2+dice4;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice1==dice5&dice3==dice4){
    total=dice1+dice5+dice3+dice4;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    
    
    else if(dice2==dice3&dice4==dice5){
    total=dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice2==dice4&dice3==dice5){
    total=dice2+dice4+dice3+dice5;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    else if(dice2==dice5&dice3==dice4){
    total=dice2+dice5+dice3+dice4;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    }
    
    
    else{
    total=0;
    totalt=Integer.toString(total);
    btntwopair.setText(totalt);
    
    }
    }
}
private void little(String lil){
    rounds=lblrounds.getText();
    
    if(rounds.equals("Player 1's Turn")){

    if(dice1<6 &dice1!=dice2 &dice1!=dice3 &dice1!=dice4 &dice1!=dice5
       &dice2<6 &dice2!=dice1 &dice2!=dice3 &dice2!=dice4 &dice2!=dice5
       &dice3<6 &dice3!=dice1 &dice3!=dice2 &dice3!=dice4 &dice3!=dice5
       &dice4<6 &dice4!=dice1 &dice4!=dice2 &dice4!=dice3 &dice4!=dice5
       &dice5<6 &dice5!=dice1 &dice5!=dice2 &dice5!=dice3 &dice5!=dice4
       ){
        total=30;
        totalt=Integer.toString(total);
        btnlittle.setText(totalt);
    }
    else{
        total=0;
        totalt=Integer.toString(total);
    btnlittle.setText(totalt);
    }
    }else if(rounds.equals("Player 2's Turn")){

    if(dice1<6 &dice1!=dice2 &dice1!=dice3 &dice1!=dice4 &dice1!=dice5
       &dice2<6 &dice2!=dice1 &dice2!=dice3 &dice2!=dice4 &dice2!=dice5
       &dice3<6 &dice3!=dice1 &dice3!=dice2 &dice3!=dice4 &dice3!=dice5
       &dice4<6 &dice4!=dice1 &dice4!=dice2 &dice4!=dice3 &dice4!=dice5
       &dice5<6 &dice5!=dice1 &dice5!=dice2 &dice5!=dice3 &dice5!=dice4
       ){
        total=30;
        totalt=Integer.toString(total);
        btnlittle2.setText(totalt);
    }
    else{
        total=0;
        totalt=Integer.toString(total);
    btnlittle2.setText(totalt);
    }
    }else if(rounds.equals("")){

    if(dice1<6 &dice1!=dice2 &dice1!=dice3 &dice1!=dice4 &dice1!=dice5
       &dice2<6 &dice2!=dice1 &dice2!=dice3 &dice2!=dice4 &dice2!=dice5
       &dice3<6 &dice3!=dice1 &dice3!=dice2 &dice3!=dice4 &dice3!=dice5
       &dice4<6 &dice4!=dice1 &dice4!=dice2 &dice4!=dice3 &dice4!=dice5
       &dice5<6 &dice5!=dice1 &dice5!=dice2 &dice5!=dice3 &dice5!=dice4
       ){
        total=30;
        totalt=Integer.toString(total);
        btnlittle.setText(totalt);
    }
    else{
        total=0;
        totalt=Integer.toString(total);
    btnlittle.setText(totalt);
    }
    
}
}
private void big(String biggest){
    rounds=lblrounds.getText();
    
    if(rounds.equals("Player 1's Turn")){

    if(dice1>1 &dice1!=dice2 &dice1!=dice3 &dice1!=dice4 &dice1!=dice5
       &dice2>1 &dice2!=dice1 &dice2!=dice3 &dice2!=dice4 &dice2!=dice5
       &dice3>1 &dice3!=dice1 &dice3!=dice2 &dice3!=dice4 &dice3!=dice5
       &dice4>1 &dice4!=dice1 &dice4!=dice2 &dice4!=dice3 &dice4!=dice5
       &dice5>1 &dice5!=dice1 &dice5!=dice2 &dice5!=dice3 &dice5!=dice4
       ){
        total=40;
        totalt=Integer.toString(total);
        btnbig.setText(totalt);
    }
    else{
        total=0;
        totalt=Integer.toString(total);
    btnbig.setText(totalt);
    }
}else if(rounds.equals("Player 2's Turn")){

    if(dice1>1 &dice1!=dice2 &dice1!=dice3 &dice1!=dice4 &dice1!=dice5
       &dice2>1 &dice2!=dice1 &dice2!=dice3 &dice2!=dice4 &dice2!=dice5
       &dice3>1 &dice3!=dice1 &dice3!=dice2 &dice3!=dice4 &dice3!=dice5
       &dice4>1 &dice4!=dice1 &dice4!=dice2 &dice4!=dice3 &dice4!=dice5
       &dice5>1 &dice5!=dice1 &dice5!=dice2 &dice5!=dice3 &dice5!=dice4
       ){
        total=40;
        totalt=Integer.toString(total);
        btnbig2.setText(totalt);
    }
    else{
        total=0;
        totalt=Integer.toString(total);
    btnbig2.setText(totalt);
    }
}else if(rounds.equals("")){

    if(dice1>1 &dice1!=dice2 &dice1!=dice3 &dice1!=dice4 &dice1!=dice5
       &dice2>1 &dice2!=dice1 &dice2!=dice3 &dice2!=dice4 &dice2!=dice5
       &dice3>1 &dice3!=dice1 &dice3!=dice2 &dice3!=dice4 &dice3!=dice5
       &dice4>1 &dice4!=dice1 &dice4!=dice2 &dice4!=dice3 &dice4!=dice5
       &dice5>1 &dice5!=dice1 &dice5!=dice2 &dice5!=dice3 &dice5!=dice4
       ){
        total=40;
        totalt=Integer.toString(total);
        btnbig.setText(totalt);
    }
    else{
        total=0;
        totalt=Integer.toString(total);
    btnbig.setText(totalt);
    }
}
}

private void threeofkind(String threeofkind){
rounds=lblrounds.getText();
    
    if(rounds.equals("Player 1's Turn")){
    
    if(dice1==dice2&dice3==dice2){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);
}else if(dice1==dice2&dice4==dice2){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);}
else if(dice1==dice2&dice5==dice2){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);}
else if(dice1==dice3&dice4==dice3){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);}
else if(dice1==dice3&dice5==dice3){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);}
else if(dice1==dice4&dice4==dice5){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);}


else if(dice2==dice3&dice4==dice3){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);
}else if(dice2==dice3&dice5==dice3){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);
}else if(dice2==dice4&dice5==dice4){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);
}



else if(dice3==dice4&dice5==dice4){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);

}else{
btn3of.setText("0");
}
}else if(rounds.equals("Player 2's Turn")){
    
    if(dice1==dice2&dice3==dice2){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of2.setText(totalt);
}else if(dice1==dice2&dice4==dice2){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of2.setText(totalt);}
else if(dice1==dice2&dice5==dice2){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of2.setText(totalt);}
else if(dice1==dice3&dice4==dice3){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of2.setText(totalt);}
else if(dice1==dice3&dice5==dice3){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of2.setText(totalt);}
else if(dice1==dice4&dice4==dice5){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of2.setText(totalt);}


else if(dice2==dice3&dice4==dice3){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of2.setText(totalt);
}else if(dice2==dice3&dice5==dice3){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of2.setText(totalt);
}else if(dice2==dice4&dice5==dice4){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of2.setText(totalt);
}



else if(dice3==dice4&dice5==dice4){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of2.setText(totalt);

}else{
btn3of2.setText("0");
}
}else if(rounds.equals("")){
    
    if(dice1==dice2&dice3==dice2){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);
}else if(dice1==dice2&dice4==dice2){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);}
else if(dice1==dice2&dice5==dice2){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);}
else if(dice1==dice3&dice4==dice3){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);}
else if(dice1==dice3&dice5==dice3){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);}
else if(dice1==dice4&dice4==dice5){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);}


else if(dice2==dice3&dice4==dice3){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);
}else if(dice2==dice3&dice5==dice3){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);
}else if(dice2==dice4&dice5==dice4){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);
}



else if(dice3==dice4&dice5==dice4){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn3of.setText(totalt);

}else{
btn3of.setText("0");
}
}
}
private void fourofkind(String fourofkind){
rounds=lblrounds.getText();
    
    if(rounds.equals("Player 1's Turn")){
    
    if(dice1==dice2&dice2==dice3&dice3==dice4){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of.setText(totalt);
}else if(dice2==dice3&dice3==dice4&dice4==dice5){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of.setText(totalt);
}else if(dice3==dice4&dice4==dice5&dice5==dice1){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of.setText(totalt);
}else if(dice1==dice2&dice2==dice3&dice3==dice5){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of.setText(totalt);
}else if(dice1==dice2&dice2==dice4&dice4==dice5){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of.setText(totalt);
}else{

    btn4of.setText("0");
}
}else if(rounds.equals("Player 2's Turn")){
    
    if(dice1==dice2&dice2==dice3&dice3==dice4){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of2.setText(totalt);
}else if(dice2==dice3&dice3==dice4&dice4==dice5){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of2.setText(totalt);
}else if(dice3==dice4&dice4==dice5&dice5==dice1){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of2.setText(totalt);
}else if(dice1==dice2&dice2==dice3&dice3==dice5){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of2.setText(totalt);
}else if(dice1==dice2&dice2==dice4&dice4==dice5){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of2.setText(totalt);
}else{

    btn4of2.setText("0");
}
}else if(rounds.equals("")){
    
    if(dice1==dice2&dice2==dice3&dice3==dice4){
    total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of.setText(totalt);
}else if(dice2==dice3&dice3==dice4&dice4==dice5){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of.setText(totalt);
}else if(dice3==dice4&dice4==dice5&dice5==dice1){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of.setText(totalt);
}else if(dice1==dice2&dice2==dice3&dice3==dice5){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of.setText(totalt);
}else if(dice1==dice2&dice2==dice4&dice4==dice5){
        total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btn4of.setText(totalt);
}else{

    btn4of.setText("0");
}
}
}
private void fullhouse(String fullhouse){
    rounds=lblrounds.getText();
    
    if(rounds.equals("Player 1's Turn")){
    
    if(dice1==dice2&dice3==dice4&dice4==dice5){
    total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice2==dice3&dice4==dice5&dice5==dice1){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice3==dice4&dice5==dice1&dice1==dice2){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice4==dice5&dice1==dice2&dice2==dice3){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice5==dice1&dice2==dice3&dice3==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice1==dice5&dice3==dice5&dice5==dice1&dice2==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice2==dice4&dice1==dice4&dice4==dice1&dice3==dice5){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice2==dice5&dice4==dice5&dice5==dice4&dice1==dice3){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice1==dice5&dice3==dice5&dice5==dice1&dice2==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice1==dice3&dice3==dice4&dice4==dice1&dice2==dice5){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice2==dice5&dice3==dice5&dice5==dice3&dice1==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else{

    btnfull.setText("0");
}
}else if(rounds.equals("Player 2's Turn")){
    
    if(dice1==dice2&dice3==dice4&dice4==dice5){
    total=25;
    totalt=Integer.toString(total);
    btnfull2.setText(totalt);
}else if(dice2==dice3&dice4==dice5&dice5==dice1){
        total=25;
    totalt=Integer.toString(total);
    btnfull2.setText(totalt);
}else if(dice3==dice4&dice5==dice1&dice1==dice2){
        total=25;
    totalt=Integer.toString(total);
    btnfull2.setText(totalt);
}else if(dice4==dice5&dice1==dice2&dice2==dice3){
        total=25;
    totalt=Integer.toString(total);
    btnfull2.setText(totalt);
}else if(dice5==dice1&dice2==dice3&dice3==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull2.setText(totalt);
}else if(dice1==dice5&dice3==dice5&dice5==dice1&dice2==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull2.setText(totalt);
}else if(dice2==dice4&dice1==dice4&dice4==dice1&dice3==dice5){
        total=25;
    totalt=Integer.toString(total);
    btnfull2.setText(totalt);
}else if(dice2==dice5&dice4==dice5&dice5==dice4&dice1==dice3){
        total=25;
    totalt=Integer.toString(total);
    btnfull2.setText(totalt);
}else if(dice1==dice5&dice3==dice5&dice5==dice1&dice2==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull2.setText(totalt);
}else if(dice1==dice3&dice3==dice4&dice4==dice1&dice2==dice5){
        total=25;
    totalt=Integer.toString(total);
    btnfull2.setText(totalt);
}else if(dice2==dice5&dice3==dice5&dice5==dice3&dice1==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull2.setText(totalt);
}else{

    btnfull2.setText("0");
}
}else if(rounds.equals("")){
    
    if(dice1==dice2&dice3==dice4&dice4==dice5){
    total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice2==dice3&dice4==dice5&dice5==dice1){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice3==dice4&dice5==dice1&dice1==dice2){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice4==dice5&dice1==dice2&dice2==dice3){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice5==dice1&dice2==dice3&dice3==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice1==dice5&dice3==dice5&dice5==dice1&dice2==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice2==dice4&dice1==dice4&dice4==dice1&dice3==dice5){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice2==dice5&dice4==dice5&dice5==dice4&dice1==dice3){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice1==dice5&dice3==dice5&dice5==dice1&dice2==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice1==dice3&dice3==dice4&dice4==dice1&dice2==dice5){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else if(dice2==dice5&dice3==dice5&dice5==dice3&dice1==dice4){
        total=25;
    totalt=Integer.toString(total);
    btnfull.setText(totalt);
}else{

    btnfull.setText("0");
}
}
}


private void yacht(String yacht){
rounds=lblrounds.getText();
    
    if(rounds.equals("Player 1's Turn")){
    
    if(dice1==dice2&dice2==dice3&dice3==dice4&dice4==dice5&dice5==dice1){
     total=50;
    totalt=Integer.toString(total);
    btnchance.setText(totalt);   
     btnyacht.setText(totalt);
        
        }else{
 total=0;
    totalt=Integer.toString(total);
    btnyacht.setText(totalt);
 }
 }else if(rounds.equals("Player 2's Turn")){
    
    if(dice1==dice2&dice2==dice3&dice3==dice4&dice4==dice5&dice5==dice1){
     total=50;
    totalt=Integer.toString(total);
    btnchance2.setText(totalt);   
     btnyacht2.setText(totalt);
        
        }else{
 total=0;
    totalt=Integer.toString(total);
    btnyacht2.setText(totalt);
 }
 }else if(rounds.equals("")){
    
    if(dice1==dice2&dice2==dice3&dice3==dice4&dice4==dice5&dice5==dice1){
     total=50;
    totalt=Integer.toString(total);
    btnchance.setText(totalt);   
     btnyacht.setText(totalt);
        
        }else{
 total=0;
    totalt=Integer.toString(total);
    btnyacht.setText(totalt);
 }
 }
}
private void chance(String chance){
rounds=lblrounds.getText();
    
    if(rounds.equals("Player 1's Turn")){
total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btnchance.setText(totalt);
    }else if(rounds.equals("Player 2's Turn")){
total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btnchance2.setText(totalt);
    }else if(rounds.equals("")){
total=dice1+dice2+dice3+dice4+dice5;
    totalt=Integer.toString(total);
    btnchance.setText(totalt);
    }
}

    
    private void dice(String dices){
    
               
        diceone=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        dicethree=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        two=Integer.toString(dicetwo);
        three=Integer.toString(dicethree);
        four=Integer.toString(dicefour);
        five=Integer.toString(dicefive);
        
        
        
        lblDice1.setText(one);
        lblDice2.setText(two);
        lblDice3.setText(three);
        lblDice4.setText(four);
        lblDice5.setText(five);
        
        on=lblDice1.getText();
        tw=lblDice2.getText();
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
   
}
    
    private void dice1(String dices){
        
        dicetwo=(int)(Math.random()*6+1);
        dicethree=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        
        two=Integer.toString(dicetwo);
        three=Integer.toString(dicethree);
        four=Integer.toString(dicefour);
        five=Integer.toString(dicefive);
        on=lblDice1.getText();
        
        
        lblDice1.setText(on);
        lblDice2.setText(two);
        lblDice3.setText(three);
        lblDice4.setText(four);
        lblDice5.setText(five);
        
        
        tw=lblDice2.getText();
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
    
    private void dice1o2(String dices){
        
        dicethree=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        
        three=Integer.toString(dicethree);
        four=Integer.toString(dicefour);
        five=Integer.toString(dicefive);
        on=lblDice1.getText();
        tw=lblDice2.getText();
        
        
        lblDice1.setText(on);
        lblDice2.setText(tw);
        lblDice3.setText(three);
        lblDice4.setText(four);
        lblDice5.setText(five);
        
        
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
    
private void dice1o2o3(String dices){
        
        
        dicefour=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        
        thre=lblDice3.getText();
        four=Integer.toString(dicefour);
        five=Integer.toString(dicefive);
        on=lblDice1.getText();
        tw=lblDice2.getText();
        
        
        lblDice1.setText(on);
        lblDice2.setText(tw);
        lblDice3.setText(thre);
        lblDice4.setText(four);
        lblDice5.setText(five);
        
        
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

private void dice1o2o4(String dices){
        
        dicethree=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        
        three=Integer.toString(dicethree);
        fou=lblDice4.getText();
        five=Integer.toString(dicefive);
        on=lblDice1.getText();
        tw=lblDice2.getText();
        
        
        lblDice1.setText(on);
        lblDice2.setText(tw);
        lblDice3.setText(three);
        lblDice4.setText(fou);
        lblDice5.setText(five);
        
        
        thre=lblDice3.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

private void dice1o2o5(String dices){
        
        dicethree=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        
        
        
        
        on=lblDice1.getText();
        tw=lblDice2.getText();
        three=Integer.toString(dicethree);
        four=Integer.toString(dicefour);
        fiv=lblDice5.getText();
        
        
        
        
        lblDice1.setText(on);
        lblDice2.setText(tw);
        lblDice3.setText(three);
        lblDice4.setText(four);
        lblDice5.setText(fiv);
        
        
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
private void dice1o2o3o4(String dices){
        
        
        
        dicefive=(int)(Math.random()*6+1);
        
        
        
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        five=Integer.toString(dicefive);
        on=lblDice1.getText();
        tw=lblDice2.getText();
        
        
        lblDice1.setText(on);
        lblDice2.setText(tw);
        lblDice3.setText(thre);
        lblDice4.setText(fou);
        lblDice5.setText(five);
        
        
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

private void dice1o2o3o5(String dices){
        
        
        dicefour=(int)(Math.random()*6+1);
        
        
        
        
        thre=lblDice3.getText();
        four=Integer.toString(dicefour);
        fiv=lblDice5.getText();
        on=lblDice1.getText();
        tw=lblDice2.getText();
        
        
        lblDice1.setText(on);
        lblDice2.setText(tw);
        lblDice3.setText(thre);
        lblDice4.setText(four);
        lblDice5.setText(fiv);
        
        
        fou=lblDice4.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

private void dice1o2o4o5(String dices){
        
        dicethree=(int)(Math.random()*6+1);
        
        
        
        
        
        three=Integer.toString(dicethree);
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        on=lblDice1.getText();
        tw=lblDice2.getText();
        
        
        lblDice1.setText(on);
        lblDice2.setText(tw);
        lblDice3.setText(three);
        lblDice4.setText(fou);
        lblDice5.setText(fiv);
        
        
        thre=lblDice3.getText();
        
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

    private void dice1o3(String dices){
        
        dicetwo=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        
        thre=lblDice3.getText();
        four=Integer.toString(dicefour);
        five=Integer.toString(dicefive);
        on=lblDice1.getText();
         two=Integer.toString(dicetwo);
        
        
        lblDice1.setText(on);
        lblDice2.setText(two);
        lblDice3.setText(thre);
        lblDice4.setText(four);
        lblDice5.setText(five);
        
        
        tw=lblDice2.getText();
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

private void dice1o3o4(String dices){
        
        
        dicetwo=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
             
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        five=Integer.toString(dicefive);
        on=lblDice1.getText();
        two=Integer.toString(dicetwo);
        
        
        lblDice1.setText(on);
        lblDice2.setText(two);
        lblDice3.setText(thre);
        lblDice4.setText(fou);
        lblDice5.setText(five);
        
        
        tw=lblDice2.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

private void dice1o3o5(String dices){
        
        
        dicefour=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        
        
        
        thre=lblDice3.getText();
        four=Integer.toString(dicefour);
        fiv=lblDice5.getText();
        on=lblDice1.getText();
        two=Integer.toString(dicetwo);
        
        
        lblDice1.setText(on);
        lblDice2.setText(two);
        lblDice3.setText(thre);
        lblDice4.setText(four);
        lblDice5.setText(fiv);
        
        
        tw=lblDice2.getText();
        fou=lblDice4.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

private void dice1o3o4o5(String dices){
        
        
        
        dicetwo=(int)(Math.random()*6+1);
        
        
        
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        on=lblDice1.getText();
        two=Integer.toString(dicetwo);
        
        
        lblDice1.setText(on);
        lblDice2.setText(two);
        lblDice3.setText(thre);
        lblDice4.setText(fou);
        lblDice5.setText(fiv);
        
        
        tw=lblDice2.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

    private void dice1o4(String dices){
        
        dicethree=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        
        three=Integer.toString(dicethree);
        fou=lblDice4.getText();
        five=Integer.toString(dicefive);
        on=lblDice1.getText();
        two=Integer.toString(dicetwo);
        
        
        lblDice1.setText(on);
        lblDice2.setText(two);
        lblDice3.setText(three);
        lblDice4.setText(fou);
        lblDice5.setText(five);
        
        
        tw=lblDice2.getText();
        thre=lblDice3.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

    
private void dice1o4o5(String dices){
        
        dicethree=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        
        
        
        three=Integer.toString(dicethree);
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        on=lblDice1.getText();
        two=Integer.toString(dicetwo);
        
        
        lblDice1.setText(on);
        lblDice2.setText(two);
        lblDice3.setText(three);
        lblDice4.setText(fou);
        lblDice5.setText(fiv);
        
        
        tw=lblDice2.getText();
        thre=lblDice3.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
    
    private void dice1o5(String dices){
        
        dicethree=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        
        
        
        three=Integer.toString(dicethree);
        four=Integer.toString(dicefour);
        fiv=lblDice5.getText();
        on=lblDice1.getText();
        two=Integer.toString(dicetwo);
        
        
        lblDice1.setText(on);
        lblDice2.setText(tw);
        lblDice3.setText(three);
        lblDice4.setText(four);
        lblDice5.setText(five);
        
        
        tw=lblDice2.getText();
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
    
    
    
    private void dice1o2o3o4o5(String dices){
        
        
        
        
        
        
        
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        on=lblDice1.getText();
        tw=lblDice2.getText();
        
        
        lblDice1.setText(on);
        lblDice2.setText(tw);
        lblDice3.setText(thre);
        lblDice4.setText(fou);
        lblDice5.setText(fiv);
        
        
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
    
    private void dice2(String dices){
        
        
        diceone=(int)(Math.random()*6+1);
        dicethree=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        three=Integer.toString(dicethree);
        four=Integer.toString(dicefour);
        five=Integer.toString(dicefive);        
        tw=lblDice2.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(tw);
        lblDice3.setText(three);
        lblDice4.setText(four);
        lblDice5.setText(five);
        
        on=lblDice1.getText();
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
    
    private void dice2o3(String dices){
        
        
        diceone=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        tw=lblDice2.getText();
        thre=lblDice3.getText();
        four=Integer.toString(dicefour);
        five=Integer.toString(dicefive);        
        
        
        
        lblDice1.setText(one);
        lblDice2.setText(tw);
        lblDice3.setText(thre);
        lblDice4.setText(four);
        lblDice5.setText(five);
        
        on=lblDice1.getText();
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
private void dice2o3o4(String dices){
        
        
        diceone=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        five=Integer.toString(dicefive);        
        tw=lblDice2.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(tw);
        lblDice3.setText(thre);
        lblDice4.setText(fou);
        lblDice5.setText(five);
        
        on=lblDice1.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

private void dice2o3o5(String dices){
        
        
        diceone=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        
        
        
        one=Integer.toString(diceone);
        thre=lblDice3.getText();
        four=Integer.toString(dicefour);
        fiv=lblDice5.getText();        
        tw=lblDice2.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(tw);
        lblDice3.setText(thre);
        lblDice4.setText(four);
        lblDice5.setText(fiv);
        
        on=lblDice1.getText();
        fou=lblDice4.getText();
        
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }

    private void dice2o4(String dices){
        
        
        diceone=(int)(Math.random()*6+1);
        dicethree=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        fou=lblDice4.getText();
        three=Integer.toString(dicethree);
        five=Integer.toString(dicefive);        
        tw=lblDice2.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(tw);
        lblDice3.setText(three);
        lblDice4.setText(fou);
        lblDice5.setText(five);
        
        on=lblDice1.getText();
        thre=lblDice3.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
    private void dice2o4o5(String dices){
        
        
        diceone=(int)(Math.random()*6+1);
        dicethree=(int)(Math.random()*6+1);
        
        
        
        one=Integer.toString(diceone);
        fou=lblDice4.getText();
        three=Integer.toString(dicethree);
        fiv=lblDice5.getText();        
        tw=lblDice2.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(tw);
        lblDice3.setText(three);
        lblDice4.setText(fou);
        lblDice5.setText(fiv);
        
        on=lblDice1.getText();
        thre=lblDice3.getText();
       
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
    
    private void dice2o5(String dices){
        
        
        diceone=(int)(Math.random()*6+1);
        dicethree=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        fiv=lblDice5.getText();
        three=Integer.toString(dicethree);
        four=Integer.toString(dicefour);      
        tw=lblDice2.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(tw);
        lblDice3.setText(three);
        lblDice4.setText(four);
        lblDice5.setText(fiv);
        
        on=lblDice1.getText();
        thre=lblDice3.getText();
        fou=lblDice4.getText();
       
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
    
    
    private void dice2o3o4o5(String dices){
        
        
        diceone=(int)(Math.random()*6+1);
        
        
        
        
        one=Integer.toString(diceone);
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        fiv=lblDice5.getText();    
        tw=lblDice2.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(tw);
        lblDice3.setText(thre);
        lblDice4.setText(fou);
        lblDice5.setText(fiv);
        
        on=lblDice1.getText();
        
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
    }
    
    private void dice3(String dices){
    
               
        diceone=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        two=Integer.toString(dicetwo);
        four=Integer.toString(dicefour);
        five=Integer.toString(dicefive);
        thre=lblDice3.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(two);
        lblDice3.setText(thre);
        lblDice4.setText(four);
        lblDice5.setText(five);
        
        on=lblDice1.getText();
        tw=lblDice2.getText();
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
   
}
    
    private void dice3o4(String dices){
    
               
        diceone=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        two=Integer.toString(dicetwo);
        fou=lblDice4.getText();
        five=Integer.toString(dicefive);
        thre=lblDice3.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(two);
        lblDice3.setText(thre);
        lblDice4.setText(fou);
        lblDice5.setText(five);
        
        on=lblDice1.getText();
        tw=lblDice2.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
   
}
    
    private void dice3o5(String dices){
    
               
        diceone=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        two=Integer.toString(dicetwo);
        fiv=lblDice5.getText();
        four=Integer.toString(dicefour);
        thre=lblDice3.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(two);
        lblDice3.setText(thre);
        lblDice4.setText(four);
        lblDice5.setText(fiv);
        
        on=lblDice1.getText();
        tw=lblDice2.getText();
        fou=lblDice4.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
   
}
    
    private void dice3o4o5(String dices){
    
               
        diceone=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        
        
        
        one=Integer.toString(diceone);
        two=Integer.toString(dicetwo);
        fou=lblDice4.getText();
        fiv=lblDice5.getText();
        thre=lblDice3.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(two);
        lblDice3.setText(thre);
        lblDice4.setText(fou);
        lblDice5.setText(fiv);
        
        on=lblDice1.getText();
        tw=lblDice2.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
   
}
    
    private void dice4(String dices){
    
               
        diceone=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        dicethree=(int)(Math.random()*6+1);
        dicefive=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        two=Integer.toString(dicetwo);
        three=Integer.toString(dicethree);
        five=Integer.toString(dicefive);
        fou=lblDice4.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(two);
        lblDice3.setText(three);
        lblDice4.setText(fou);
        lblDice5.setText(five);
        
        on=lblDice1.getText();
        tw=lblDice2.getText();
        thre=lblDice3.getText();
        fiv=lblDice5.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
   
}
    
    private void dice4o5(String dices){
    
               
        diceone=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        dicethree=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        two=Integer.toString(dicetwo);
        three=Integer.toString(dicethree);
        fiv=lblDice5.getText();
        fou=lblDice4.getText();
        
        
        lblDice1.setText(one);
        lblDice2.setText(two);
        lblDice3.setText(three);
        lblDice4.setText(fou);
        lblDice5.setText(fiv);
        
        on=lblDice1.getText();
        tw=lblDice2.getText();
        thre=lblDice3.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
   
}
    
    private void dice5(String dices){
    
               
        diceone=(int)(Math.random()*6+1);
        dicetwo=(int)(Math.random()*6+1);
        dicethree=(int)(Math.random()*6+1);
        dicefour=(int)(Math.random()*6+1);
        
        
        one=Integer.toString(diceone);
        two=Integer.toString(dicetwo);
        three=Integer.toString(dicethree);
        four=Integer.toString(dicefour);
        fiv=lblDice5.getText();
        
        
        
        lblDice1.setText(one);
        lblDice2.setText(two);
        lblDice3.setText(three);
        lblDice4.setText(four);
        lblDice5.setText(fiv);
        
        on=lblDice1.getText();
        tw=lblDice2.getText();
        thre=lblDice3.getText();
        fou=lblDice4.getText();
        
        dice1=Integer.valueOf(on);
        dice2=Integer.valueOf(tw);
        dice3=Integer.valueOf(thre);
        dice4=Integer.valueOf(fou);
        dice5=Integer.valueOf(fiv);
   
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(yatz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(yatz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(yatz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(yatz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new yatz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1pl2;
    private javax.swing.JButton btn1s;
    private javax.swing.JButton btn1s2;
    private javax.swing.JButton btn2pl2;
    private javax.swing.JButton btn2s;
    private javax.swing.JButton btn2s2;
    private javax.swing.JButton btn3of;
    private javax.swing.JButton btn3of2;
    private javax.swing.JButton btn3s;
    private javax.swing.JButton btn3s2;
    private javax.swing.JButton btn4of;
    private javax.swing.JButton btn4of2;
    private javax.swing.JButton btn4s;
    private javax.swing.JButton btn4s2;
    private javax.swing.JButton btn5s;
    private javax.swing.JButton btn5s2;
    private javax.swing.JButton btn6s;
    private javax.swing.JButton btn6s2;
    private javax.swing.JButton btnagain2;
    private javax.swing.JButton btnbig;
    private javax.swing.JButton btnbig2;
    private javax.swing.JButton btnchance;
    private javax.swing.JButton btnchance2;
    private javax.swing.JButton btnfirst;
    private javax.swing.JButton btnfull;
    private javax.swing.JButton btnfull2;
    private javax.swing.JButton btnlittle;
    private javax.swing.JButton btnlittle2;
    private javax.swing.JButton btnlock1;
    private javax.swing.JButton btnlock2;
    private javax.swing.JButton btnlock3;
    private javax.swing.JButton btnlock4;
    private javax.swing.JButton btnlock5;
    private javax.swing.JButton btnpair;
    private javax.swing.JButton btnpair2;
    private javax.swing.JButton btnroll;
    private javax.swing.JButton btnroll1or2;
    private javax.swing.JButton btnsecond;
    private javax.swing.JButton btnstart2;
    private javax.swing.JButton btntwopair;
    private javax.swing.JButton btntwopair2;
    private javax.swing.JButton btnyacht;
    private javax.swing.JButton btnyacht2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel lbl1pdice;
    private javax.swing.JLabel lbl1pl;
    private javax.swing.JLabel lbl2bon;
    private javax.swing.JLabel lbl2bonu;
    private javax.swing.JLabel lbl2bot;
    private javax.swing.JLabel lbl2bott;
    private javax.swing.JLabel lbl2fin;
    private javax.swing.JLabel lbl2fina;
    private javax.swing.JLabel lbl2pdice;
    private javax.swing.JLabel lbl2pl;
    private javax.swing.JLabel lbl2top;
    private javax.swing.JLabel lbl2topt;
    private javax.swing.JLabel lblDice1;
    private javax.swing.JLabel lblDice2;
    private javax.swing.JLabel lblDice3;
    private javax.swing.JLabel lblDice4;
    private javax.swing.JLabel lblDice5;
    private javax.swing.JLabel lblbon;
    private javax.swing.JLabel lblbonu;
    private javax.swing.JLabel lblbot;
    private javax.swing.JLabel lblbott;
    private javax.swing.JLabel lblchoose;
    private javax.swing.JLabel lblfin;
    private javax.swing.JLabel lblfina;
    private javax.swing.JLabel lblhighest;
    private javax.swing.JLabel lblor;
    private javax.swing.JLabel lblplayer;
    private javax.swing.JLabel lblrdy;
    private javax.swing.JLabel lblroll;
    private javax.swing.JLabel lblrounds;
    private javax.swing.JLabel lbltop;
    private javax.swing.JLabel lbltopt;
    // End of variables declaration//GEN-END:variables
}
